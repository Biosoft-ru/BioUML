import ru.biosoft.physicell.core.Cell;
import ru.biosoft.physicell.core.CellDefinition;
import ru.biosoft.physicell.core.CellFunctions.Instantiator;
import ru.biosoft.physicell.core.Model;
import ru.biosoft.physicell.core.SignalBehavior;
import ru.biosoft.physicell.biofvm.Microenvironment;

public class WorkerInstantiator extends Instantiator
{
    @Override
    public Cell execute(CellDefinition cd, Model model) throws Exception
    {
        Cell cell = new Cell( cd, model );
        Microenvironment m = model.getMicroenvironment();
        cell.parameters.o2_proliferation_saturation = 38.0;
        cell.parameters.o2_reference = 38.0;

        cell.phenotype.mechanics.relMaxAttachmentDistance = cd.custom_data.get( "max_attachment_distance" ) / cd.phenotype.geometry.radius;
        cell.phenotype.mechanics.relDetachmentDistance = cd.custom_data.get( "max_elastic_displacement" ) / cd.phenotype.geometry.radius;
        cell.phenotype.mechanics.attachmentElasticConstant = cd.custom_data.get( "elastic_coefficient" );

        return cell;
    }

}
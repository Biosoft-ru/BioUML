/* Generated By:JJTree: Do not edit this line. AstEquation.java Version 7.0 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=true,NODE_PREFIX=Ast,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package biouml.plugins.antimony.astparser;

import biouml.standard.type.Unit;

public class AstEquation extends SimpleNode
{
    public AstEquation(int id)
    {
        super(id);
    }

    public AstEquation(AntimonyParser p, int id)
    {
        super(p, id);
    }

    public boolean isNumber()
    {
        if( this.jjtGetNumChildren() > 1 )
            return false;
        if( this.jjtGetChild(0) instanceof AstFormulaElement && ( (AstFormulaElement)this.jjtGetChild(0) ).isNumber() )
            return true;
        return false;
    }

    public String getFormula()
    {
        StringBuilder formula = new StringBuilder("");
        for( int i = 0; i < this.jjtGetNumChildren(); i++ )
        {
            formula.append(jjtGetChild(i).toString());
        }
        return formula.toString();
    }

    @Override
    public String toAntimonyString()
    {
        return "";
    }

    public boolean isNumberWithUnit()
    {
        if( this.jjtGetNumChildren() != 2 )
            return false;
        if( this.jjtGetChild(0) instanceof AstFormulaElement && ( (AstFormulaElement)this.jjtGetChild(0) ).isNumber()
                && this.jjtGetChild(1) instanceof AstFormulaElement && ( (AstFormulaElement)this.jjtGetChild(1) ).isString() )
            return true;
        return false;
    }

    public void setUnit(String units)
    {
        if( !AstSymbol.INIT.equals( ( (AstSymbol)this.jjtGetParent() ).getDeclarationType()) )
            return;

        if( this.isNumberWithUnit() && Unit.UNDEFINED.equals(units) )
            this.removeChild(1);
        else
        {
            AstRegularFormulaElement elem = new AstRegularFormulaElement(AntimonyParser.JJTREGULARFORMULAELEMENT);
            elem.setElement(units);
            elem.setString(true);
            //AntimonyAstCreator.createSpace(elem);
            this.jjtAddChild(elem, 1);
        }

    }

}
/* JavaCC - OriginalChecksum=e54a522aa9d2283cb5bb5cd17a1a92ce (do not edit this line) */

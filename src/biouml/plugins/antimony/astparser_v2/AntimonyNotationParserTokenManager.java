/* AntimonyNotationParserTokenManager.java */
/* Generated By:JJTree&JavaCC: Do not edit this line. AntimonyNotationParserTokenManager.java */
package biouml.plugins.antimony.astparser_v2;
import java.io.Reader;
import java.io.StringReader;
import java.util.logging.Level;
import java.util.logging.Logger;
import biouml.plugins.antimony.AntimonyAnnotationImporter;
import java.util.Stack;

/** Token Manager. */
@SuppressWarnings ("unused")
public class AntimonyNotationParserTokenManager implements AntimonyNotationParserConstants {
Stack lexicalStateStack = new Stack();

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1){
   switch (pos)
   {
      case 0:
         if ((active0 & 0x800010000L) != 0L)
         {
            jjmatchedKind = 74;
            return 246;
         }
         if ((active0 & 0x2100000100L) != 0L)
         {
            jjmatchedKind = 74;
            return 293;
         }
         if ((active1 & 0x10L) != 0L)
            return 539;
         if ((active0 & 0x1020000000L) != 0L)
         {
            jjmatchedKind = 74;
            return 495;
         }
         if ((active0 & 0x4000000000L) != 0L)
         {
            jjmatchedKind = 74;
            return 58;
         }
         if ((active0 & 0x10L) != 0L)
         {
            jjmatchedKind = 82;
            return 230;
         }
         if ((active0 & 0x180400401000L) != 0L)
         {
            jjmatchedKind = 74;
            return 98;
         }
         if ((active0 & 0xa00004000000L) != 0L)
         {
            jjmatchedKind = 74;
            return 458;
         }
         if ((active0 & 0x8000L) != 0L)
         {
            jjmatchedKind = 74;
            return 540;
         }
         if ((active0 & 0x800000L) != 0L)
         {
            jjmatchedKind = 74;
            return 363;
         }
         if ((active0 & 0x200000L) != 0L || (active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 74;
            return 192;
         }
         if ((active0 & 0x100000L) != 0L)
         {
            jjmatchedKind = 74;
            return 236;
         }
         if ((active0 & 0x8000000L) != 0L)
         {
            jjmatchedKind = 74;
            return 374;
         }
         if ((active1 & 0x800L) != 0L)
            return 37;
         if ((active0 & 0x80000000L) != 0L)
         {
            jjmatchedKind = 74;
            return 18;
         }
         if ((active0 & 0x40004000L) != 0L)
         {
            jjmatchedKind = 74;
            return 396;
         }
         if ((active0 & 0x1000000000000L) != 0L)
         {
            jjmatchedKind = 74;
            return 423;
         }
         if ((active0 & 0x8000000000000L) != 0L)
         {
            jjmatchedKind = 74;
            return 207;
         }
         if ((active0 & 0x400000000400L) != 0L)
         {
            jjmatchedKind = 74;
            return 442;
         }
         return -1;
      case 1:
         if ((active0 & 0x20000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 74;
               jjmatchedPos = 1;
            }
            return 509;
         }
         if ((active0 & 0x200000000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 74;
               jjmatchedPos = 1;
            }
            return 474;
         }
         if ((active0 & 0x400000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 74;
               jjmatchedPos = 1;
            }
            return 106;
         }
         if ((active0 & 0x8000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 74;
               jjmatchedPos = 1;
            }
            return 373;
         }
         if ((active0 & 0x4000000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 74;
               jjmatchedPos = 1;
            }
            return 57;
         }
         if ((active0 & 0x400001000L) != 0L)
            return 183;
         if ((active1 & 0x20L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 74;
               jjmatchedPos = 1;
            }
            return 199;
         }
         if ((active0 & 0x100000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 74;
               jjmatchedPos = 1;
            }
            return 238;
         }
         if ((active0 & 0x8000000000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 74;
               jjmatchedPos = 1;
            }
            return 214;
         }
         if ((active0 & 0x40004000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 74;
               jjmatchedPos = 1;
            }
            return 399;
         }
         if ((active0 & 0x4000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 17;
               jjmatchedPos = 1;
            }
            return 457;
         }
         if ((active0 & 0x100000000L) != 0L)
            return 292;
         if ((active0 & 0x1000000800000L) != 0L)
            return 540;
         if ((active0 & 0xd01880218500L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 74;
               jjmatchedPos = 1;
            }
            return 540;
         }
         if ((active0 & 0x80000000000L) != 0L)
            return 185;
         if ((active0 & 0x2000000000L) != 0L)
            return 305;
         return -1;
      case 2:
         if ((active0 & 0x8000000000000L) != 0L)
            return 213;
         if ((active0 & 0x8000000L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 2;
            return 379;
         }
         if ((active0 & 0xf01c0001c500L) != 0L || (active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 2;
            return 540;
         }
         if ((active0 & 0x4000000L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 2;
            return 456;
         }
         if ((active0 & 0xa0700000L) != 0L)
            return 540;
         if ((active0 & 0x4000000000L) != 0L)
            return 56;
         if ((active0 & 0x40000000L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 2;
            return 419;
         }
         return -1;
      case 3:
         if ((active0 & 0x1000008000L) != 0L)
            return 540;
         if ((active0 & 0x4000000L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 3;
            return 541;
         }
         if ((active0 & 0xf00c48014500L) != 0L || (active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 3;
            return 540;
         }
         return -1;
      case 4:
         if ((active0 & 0xe00c08014500L) != 0L || (active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 4;
            return 540;
         }
         if ((active0 & 0x4000000L) != 0L)
         {
            jjmatchedKind = 17;
            jjmatchedPos = 4;
            return 540;
         }
         if ((active0 & 0x100040000000L) != 0L)
            return 540;
         return -1;
      case 5:
         if ((active0 & 0xe00804014400L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 5;
            return 540;
         }
         if ((active0 & 0x408000100L) != 0L || (active1 & 0x20L) != 0L)
            return 540;
         return -1;
      case 6:
         if ((active0 & 0x10000L) != 0L)
            return 540;
         if ((active0 & 0xe00804004400L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 6;
            return 540;
         }
         return -1;
      case 7:
         if ((active0 & 0xc00804004000L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 7;
            return 540;
         }
         if ((active0 & 0x200000000400L) != 0L)
            return 540;
         return -1;
      case 8:
         if ((active0 & 0xc00800004000L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 8;
            return 540;
         }
         if ((active0 & 0x4000000L) != 0L)
            return 540;
         return -1;
      case 9:
         if ((active0 & 0x400800004000L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 9;
            return 540;
         }
         if ((active0 & 0x800000000000L) != 0L)
            return 540;
         return -1;
      case 10:
         if ((active0 & 0x800000000L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 10;
            return 540;
         }
         if ((active0 & 0x400000004000L) != 0L)
            return 540;
         return -1;
      case 11:
         if ((active0 & 0x800000000L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 11;
            return 540;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1){
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0(){
   switch(curChar)
   {
      case 36:
         return jjStopAtPos(0, 33);
      case 38:
         return jjStopAtPos(0, 24);
      case 40:
         return jjStopAtPos(0, 55);
      case 41:
         return jjStopAtPos(0, 54);
      case 42:
         return jjStopAtPos(0, 83);
      case 43:
         return jjStopAtPos(0, 49);
      case 44:
         return jjStopAtPos(0, 73);
      case 45:
         return jjStopAtPos(0, 50);
      case 46:
         return jjStartNfaWithStates_0(0, 75, 37);
      case 47:
         return jjMoveStringLiteralDfa1_0(0x10L, 0x0L);
      case 58:
         return jjStopAtPos(0, 39);
      case 59:
         return jjStopAtPos(0, 52);
      case 60:
         return jjStopAtPos(0, 80);
      case 61:
         return jjStartNfaWithStates_0(0, 68, 539);
      case 62:
         return jjStopAtPos(0, 81);
      case 64:
         return jjStopAtPos(0, 56);
      case 97:
         return jjMoveStringLiteralDfa1_0(0x180400401000L, 0x0L);
      case 99:
         return jjMoveStringLiteralDfa1_0(0x40004000L, 0x0L);
      case 100:
         return jjMoveStringLiteralDfa1_0(0x8000000L, 0x0L);
      case 101:
         return jjMoveStringLiteralDfa1_0(0x1020000000L, 0x0L);
      case 102:
         return jjMoveStringLiteralDfa1_0(0x400000000400L, 0x0L);
      case 103:
         return jjMoveStringLiteralDfa1_0(0x100000L, 0x0L);
      case 104:
         return jjMoveStringLiteralDfa1_0(0x4000000000L, 0x0L);
      case 105:
         return jjMoveStringLiteralDfa1_0(0x2100000100L, 0x0L);
      case 108:
         return jjMoveStringLiteralDfa1_0(0x200000L, 0x20L);
      case 110:
         return jjMoveStringLiteralDfa1_0(0x8000000000000L, 0x0L);
      case 111:
         return jjMoveStringLiteralDfa1_0(0x800000L, 0x0L);
      case 112:
         return jjMoveStringLiteralDfa1_0(0xa00004000000L, 0x0L);
      case 115:
         return jjMoveStringLiteralDfa1_0(0x800010000L, 0x0L);
      case 116:
         return jjMoveStringLiteralDfa1_0(0x1000000000000L, 0x0L);
      case 117:
         return jjMoveStringLiteralDfa1_0(0x8000L, 0x0L);
      case 118:
         return jjMoveStringLiteralDfa1_0(0x80000000L, 0x0L);
      case 124:
         return jjStopAtPos(0, 25);
      default :
         return jjMoveNfa_0(1, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0, long active1){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, active1);
      return 1;
   }
   switch(curChar)
   {
      case 42:
         if ((active0 & 0x10L) != 0L)
            return jjStopAtPos(1, 4);
         break;
      case 48:
         if ((active0 & 0x1000000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 48, 540);
         break;
      case 97:
         return jjMoveStringLiteralDfa2_0(active0, 0x4080000000L, active1, 0L);
      case 101:
         return jjMoveStringLiteralDfa2_0(active0, 0x800008300000L, active1, 0L);
      case 102:
         return jjMoveStringLiteralDfa2_0(active0, 0x100000000000L, active1, 0L);
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, 0x4000000L, active1, 0L);
      case 108:
         return jjMoveStringLiteralDfa2_0(active0, 0x1000000000L, active1, 0L);
      case 109:
         return jjMoveStringLiteralDfa2_0(active0, 0x100L, active1, 0L);
      case 110:
         if ((active0 & 0x100000000L) != 0L)
            return jjStartNfaWithStates_0(1, 32, 292);
         return jjMoveStringLiteralDfa2_0(active0, 0x20408000L, active1, 0L);
      case 111:
         return jjMoveStringLiteralDfa2_0(active0, 0x8000040004000L, active1, 0x20L);
      case 114:
         if ((active0 & 0x800000L) != 0L)
            return jjStartNfaWithStates_0(1, 23, 540);
         return jjMoveStringLiteralDfa2_0(active0, 0x600000000000L, active1, 0L);
      case 115:
         if ((active0 & 0x1000L) != 0L)
         {
            jjmatchedKind = 12;
            jjmatchedPos = 1;
         }
         else if ((active0 & 0x2000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 37, 305);
         return jjMoveStringLiteralDfa2_0(active0, 0x400000000L, active1, 0L);
      case 116:
         if ((active0 & 0x80000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 43, 185);
         break;
      case 117:
         return jjMoveStringLiteralDfa2_0(active0, 0x800010400L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0, active1);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(0, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, active1);
      return 2;
   }
   switch(curChar)
   {
      case 98:
         return jjMoveStringLiteralDfa3_0(active0, 0x800010000L, active1, 0L);
      case 99:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x20L);
      case 100:
         if ((active0 & 0x400000L) != 0L)
            return jjStartNfaWithStates_0(2, 22, 540);
         else if ((active0 & 0x20000000L) != 0L)
            return jjStartNfaWithStates_0(2, 29, 540);
         break;
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0x4000000L, active1, 0L);
      case 105:
         return jjMoveStringLiteralDfa3_0(active0, 0x200000008000L, active1, 0L);
      case 108:
         return jjMoveStringLiteralDfa3_0(active0, 0x8000000L, active1, 0L);
      case 109:
         return jjMoveStringLiteralDfa3_0(active0, 0x4000L, active1, 0L);
      case 110:
         return jjMoveStringLiteralDfa3_0(active0, 0x40000400L, active1, 0L);
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0x400000000000L, active1, 0L);
      case 112:
         return jjMoveStringLiteralDfa3_0(active0, 0x100L, active1, 0L);
      case 113:
         if ((active0 & 0x100000L) != 0L)
            return jjStartNfaWithStates_0(2, 20, 540);
         else if ((active0 & 0x200000L) != 0L)
            return jjStartNfaWithStates_0(2, 21, 540);
         break;
      case 114:
         if ((active0 & 0x80000000L) != 0L)
            return jjStartNfaWithStates_0(2, 31, 540);
         return jjMoveStringLiteralDfa3_0(active0, 0x800000000000L, active1, 0L);
      case 115:
         if ((active0 & 0x4000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 38, 56);
         return jjMoveStringLiteralDfa3_0(active0, 0x1400000000L, active1, 0L);
      case 116:
         if ((active0 & 0x8000000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 51, 213);
         return jjMoveStringLiteralDfa3_0(active0, 0x100000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0, active1);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(1, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, active1);
      return 3;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x20L);
      case 99:
         return jjMoveStringLiteralDfa4_0(active0, 0x4000400L, active1, 0L);
      case 101:
         if ((active0 & 0x1000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 36, 540);
         return jjMoveStringLiteralDfa4_0(active0, 0x100408000000L, active1, 0L);
      case 109:
         return jjMoveStringLiteralDfa4_0(active0, 0x400000000000L, active1, 0L);
      case 111:
         return jjMoveStringLiteralDfa4_0(active0, 0x200000000100L, active1, 0L);
      case 112:
         return jjMoveStringLiteralDfa4_0(active0, 0x4000L, active1, 0L);
      case 115:
         return jjMoveStringLiteralDfa4_0(active0, 0x800840000000L, active1, 0L);
      case 116:
         if ((active0 & 0x8000L) != 0L)
            return jjStartNfaWithStates_0(3, 15, 540);
         return jjMoveStringLiteralDfa4_0(active0, 0x10000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0, active1);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(2, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0, active1);
      return 4;
   }
   switch(curChar)
   {
      case 84:
         return jjMoveStringLiteralDfa5_0(active0, 0x400000000000L, active1, 0L);
      case 97:
         return jjMoveStringLiteralDfa5_0(active0, 0x4000L, active1, 0L);
      case 101:
         return jjMoveStringLiteralDfa5_0(active0, 0x4000000L, active1, 0L);
      case 105:
         return jjMoveStringLiteralDfa5_0(active0, 0x800000000000L, active1, 0L);
      case 114:
         if ((active0 & 0x100000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 44, 540);
         return jjMoveStringLiteralDfa5_0(active0, 0x200400000100L, active1, 0L);
      case 116:
         if ((active0 & 0x40000000L) != 0L)
            return jjStartNfaWithStates_0(4, 30, 540);
         return jjMoveStringLiteralDfa5_0(active0, 0x808000400L, active1, 0x20L);
      case 121:
         return jjMoveStringLiteralDfa5_0(active0, 0x10000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(3, active0, active1);
}
private int jjMoveStringLiteralDfa5_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(3, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0, active1);
      return 5;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa6_0(active0, 0x800000000L, active1, 0L);
      case 101:
         if ((active0 & 0x8000000L) != 0L)
            return jjStartNfaWithStates_0(5, 27, 540);
         else if ((active1 & 0x20L) != 0L)
            return jjStartNfaWithStates_0(5, 69, 540);
         break;
      case 105:
         return jjMoveStringLiteralDfa6_0(active0, 0x200000000400L, active1, 0L);
      case 112:
         return jjMoveStringLiteralDfa6_0(active0, 0x10000L, active1, 0L);
      case 114:
         return jjMoveStringLiteralDfa6_0(active0, 0x400000004000L, active1, 0L);
      case 115:
         return jjMoveStringLiteralDfa6_0(active0, 0x800000000000L, active1, 0L);
      case 116:
         if ((active0 & 0x100L) != 0L)
            return jjStartNfaWithStates_0(5, 8, 540);
         else if ((active0 & 0x400000000L) != 0L)
            return jjStartNfaWithStates_0(5, 34, 540);
         break;
      case 119:
         return jjMoveStringLiteralDfa6_0(active0, 0x4000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(4, active0, active1);
}
private int jjMoveStringLiteralDfa6_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(4, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, active0, 0L);
      return 6;
   }
   switch(curChar)
   {
      case 101:
         if ((active0 & 0x10000L) != 0L)
            return jjStartNfaWithStates_0(6, 16, 540);
         break;
      case 105:
         return jjMoveStringLiteralDfa7_0(active0, 0x400004000000L);
      case 110:
         return jjMoveStringLiteralDfa7_0(active0, 0x800000000L);
      case 111:
         return jjMoveStringLiteralDfa7_0(active0, 0x400L);
      case 116:
         return jjMoveStringLiteralDfa7_0(active0, 0xa00000004000L);
      default :
         break;
   }
   return jjStartNfa_0(5, active0, 0L);
}
private int jjMoveStringLiteralDfa7_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(5, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, active0, 0L);
      return 7;
   }
   switch(curChar)
   {
      case 99:
         return jjMoveStringLiteralDfa8_0(active0, 0x800000000L);
      case 101:
         return jjMoveStringLiteralDfa8_0(active0, 0x800000000000L);
      case 103:
         return jjMoveStringLiteralDfa8_0(active0, 0x400000000000L);
      case 109:
         return jjMoveStringLiteralDfa8_0(active0, 0x4000L);
      case 110:
         if ((active0 & 0x400L) != 0L)
            return jjStartNfaWithStates_0(7, 10, 540);
         break;
      case 115:
         return jjMoveStringLiteralDfa8_0(active0, 0x4000000L);
      case 121:
         if ((active0 & 0x200000000000L) != 0L)
            return jjStartNfaWithStates_0(7, 45, 540);
         break;
      default :
         break;
   }
   return jjStartNfa_0(6, active0, 0L);
}
private int jjMoveStringLiteralDfa8_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(6, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(7, active0, 0L);
      return 8;
   }
   switch(curChar)
   {
      case 101:
         if ((active0 & 0x4000000L) != 0L)
            return jjStartNfaWithStates_0(8, 26, 540);
         return jjMoveStringLiteralDfa9_0(active0, 0x800004000L);
      case 103:
         return jjMoveStringLiteralDfa9_0(active0, 0x400000000000L);
      case 110:
         return jjMoveStringLiteralDfa9_0(active0, 0x800000000000L);
      default :
         break;
   }
   return jjStartNfa_0(7, active0, 0L);
}
private int jjMoveStringLiteralDfa9_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(7, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(8, active0, 0L);
      return 9;
   }
   switch(curChar)
   {
      case 79:
         return jjMoveStringLiteralDfa10_0(active0, 0x800000000L);
      case 101:
         return jjMoveStringLiteralDfa10_0(active0, 0x400000000000L);
      case 110:
         return jjMoveStringLiteralDfa10_0(active0, 0x4000L);
      case 116:
         if ((active0 & 0x800000000000L) != 0L)
            return jjStartNfaWithStates_0(9, 47, 540);
         break;
      default :
         break;
   }
   return jjStartNfa_0(8, active0, 0L);
}
private int jjMoveStringLiteralDfa10_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(8, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(9, active0, 0L);
      return 10;
   }
   switch(curChar)
   {
      case 110:
         return jjMoveStringLiteralDfa11_0(active0, 0x800000000L);
      case 114:
         if ((active0 & 0x400000000000L) != 0L)
            return jjStartNfaWithStates_0(10, 46, 540);
         break;
      case 116:
         if ((active0 & 0x4000L) != 0L)
            return jjStartNfaWithStates_0(10, 14, 540);
         break;
      default :
         break;
   }
   return jjStartNfa_0(9, active0, 0L);
}
private int jjMoveStringLiteralDfa11_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(9, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(10, active0, 0L);
      return 11;
   }
   switch(curChar)
   {
      case 108:
         return jjMoveStringLiteralDfa12_0(active0, 0x800000000L);
      default :
         break;
   }
   return jjStartNfa_0(10, active0, 0L);
}
private int jjMoveStringLiteralDfa12_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(10, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(11, active0, 0L);
      return 12;
   }
   switch(curChar)
   {
      case 121:
         if ((active0 & 0x800000000L) != 0L)
            return jjStartNfaWithStates_0(12, 35, 540);
         break;
      default :
         break;
   }
   return jjStartNfa_0(11, active0, 0L);
}
private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 539;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 185:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 452;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 373:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 452;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 98:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 452;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 305:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 452;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 509:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 452;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 396:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 452;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 379:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 452;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 293:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 452;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 495:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 452;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 192:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 452;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 183:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 452;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 236:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 452;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 457:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 452;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 214:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 452;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 442:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 452;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 1:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 85)
                        kind = 85;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if ((0x2400L & l) != 0L)
                  {
                     if (kind > 7)
                        kind = 7;
                  }
                  else if ((0x100000200L & l) != 0L)
                  {
                     if (kind > 1)
                        kind = 1;
                     { jjCheckNAdd(0); }
                  }
                  else if (curChar == 47)
                     { jjAddStates(4, 5); }
                  else if (curChar == 46)
                     { jjCheckNAdd(37); }
                  else if (curChar == 34)
                     { jjCheckNAddTwoStates(33, 34); }
                  else if (curChar == 61)
                     { jjCheckNAddTwoStates(30, 31); }
                  else if (curChar == 33)
                     { jjCheckNAddTwoStates(24, 25); }
                  else if (curChar == 39)
                     { jjCheckNAddTwoStates(21, 22); }
                  else if (curChar == 35)
                  {
                     if (kind > 3)
                        kind = 3;
                     { jjCheckNAdd(2); }
                  }
                  if (curChar == 47)
                  {
                     if (kind > 82)
                        kind = 82;
                  }
                  else if (curChar == 48)
                     { jjCheckNAddTwoStates(27, 28); }
                  else if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 456:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 452;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 213:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 452;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 106:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 452;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 199:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 452;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 56:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 452;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 474:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 452;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 423:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 452;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 230:
                  if (curChar == 47)
                  {
                     if (kind > 3)
                        kind = 3;
                     { jjCheckNAdd(2); }
                  }
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 228;
                  break;
               case 541:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 452;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 540:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 452;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 363:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 452;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 207:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 452;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 539:
                  if (curChar == 62)
                  {
                     if (kind > 53)
                        kind = 53;
                  }
                  else if (curChar == 32)
                     { jjCheckNAddTwoStates(30, 31); }
                  break;
               case 246:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 452;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 57:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 452;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 18:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 452;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 374:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 452;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 58:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 452;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 458:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 452;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 399:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 452;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 419:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 452;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 292:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 452;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 238:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 452;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 0:
                  if ((0x100000200L & l) == 0L)
                     break;
                  if (kind > 1)
                     kind = 1;
                  { jjCheckNAdd(0); }
                  break;
               case 2:
                  if ((0xffffffffffffdbffL & l) == 0L)
                     break;
                  if (kind > 3)
                     kind = 3;
                  { jjCheckNAdd(2); }
                  break;
               case 3:
                  if ((0x2400L & l) != 0L && kind > 7)
                     kind = 7;
                  break;
               case 4:
                  if (curChar == 10 && kind > 7)
                     kind = 7;
                  break;
               case 5:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 20:
                  if (curChar == 39)
                     { jjCheckNAddTwoStates(21, 22); }
                  break;
               case 21:
                  if (curChar == 32)
                     { jjCheckNAddTwoStates(21, 22); }
                  break;
               case 22:
                  if (curChar == 61 && kind > 40)
                     kind = 40;
                  break;
               case 23:
                  if (curChar == 33)
                     { jjCheckNAddTwoStates(24, 25); }
                  break;
               case 24:
                  if (curChar == 32)
                     { jjCheckNAddTwoStates(24, 25); }
                  break;
               case 25:
                  if (curChar == 61 && kind > 41)
                     kind = 41;
                  break;
               case 26:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(27, 28); }
                  break;
               case 27:
                  if (curChar == 32)
                     { jjCheckNAddTwoStates(27, 28); }
                  break;
               case 28:
                  if (curChar == 61 && kind > 42)
                     kind = 42;
                  break;
               case 29:
                  if (curChar == 61)
                     { jjCheckNAddTwoStates(30, 31); }
                  break;
               case 30:
                  if (curChar == 32)
                     { jjCheckNAddTwoStates(30, 31); }
                  break;
               case 31:
                  if (curChar == 62 && kind > 53)
                     kind = 53;
                  break;
               case 32:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(33, 34); }
                  break;
               case 33:
                  if ((0xfffffffbffffdbffL & l) != 0L)
                     { jjCheckNAddTwoStates(33, 34); }
                  break;
               case 34:
                  if (curChar == 34 && kind > 76)
                     kind = 76;
                  break;
               case 35:
                  if (curChar == 47 && kind > 82)
                     kind = 82;
                  break;
               case 36:
                  if (curChar == 46)
                     { jjCheckNAdd(37); }
                  break;
               case 37:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 85)
                     kind = 85;
                  { jjCheckNAddTwoStates(37, 38); }
                  break;
               case 39:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(40); }
                  break;
               case 40:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 85)
                     kind = 85;
                  { jjCheckNAdd(40); }
                  break;
               case 41:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 85)
                     kind = 85;
                  { jjCheckNAddStates(0, 3); }
                  break;
               case 42:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(42, 43); }
                  break;
               case 43:
                  if (curChar != 46)
                     break;
                  if (kind > 85)
                     kind = 85;
                  { jjCheckNAddTwoStates(44, 45); }
                  break;
               case 44:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 85)
                     kind = 85;
                  { jjCheckNAddTwoStates(44, 45); }
                  break;
               case 46:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(47); }
                  break;
               case 47:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 85)
                     kind = 85;
                  { jjCheckNAdd(47); }
                  break;
               case 48:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 85)
                     kind = 85;
                  { jjCheckNAddTwoStates(48, 49); }
                  break;
               case 50:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(51); }
                  break;
               case 51:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 85)
                     kind = 85;
                  { jjCheckNAdd(51); }
                  break;
               case 111:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 201:
                  if (curChar == 48 && kind > 17)
                     kind = 17;
                  break;
               case 202:
                  if (curChar == 49)
                     jjstateSet[jjnewStateCnt++] = 201;
                  break;
               case 227:
                  if (curChar == 47)
                     { jjAddStates(4, 5); }
                  break;
               case 228:
                  if (curChar != 47)
                     break;
                  if (kind > 2)
                     kind = 2;
                  { jjCheckNAdd(229); }
                  break;
               case 229:
                  if ((0xffffffffffffdbffL & l) == 0L)
                     break;
                  if (kind > 2)
                     kind = 2;
                  { jjCheckNAdd(229); }
                  break;
               case 231:
                  if (curChar != 47)
                     break;
                  if (kind > 3)
                     kind = 3;
                  { jjCheckNAdd(2); }
                  break;
               case 450:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 451:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 452;
                  break;
               case 453:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddTwoStates(451, 453); }
                  break;
               case 454:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  { jjCheckNAdd(454); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 185:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  if (curChar == 97)
                     { jjCheckNAdd(99); }
                  break;
               case 373:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 388;
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 379;
                  else if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 372;
                  break;
               case 98:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 185;
                  else if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 183;
                  else if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 181;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 179;
                  else if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 123;
                  else if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 119;
                  else if (curChar == 98)
                     { jjCheckNAdd(97); }
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 174;
                  else if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 106;
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 170;
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 165;
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 161;
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 156;
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 152;
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 147;
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 142;
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 137;
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 133;
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 127;
                  break;
               case 305:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  if (curChar == 80)
                     jjstateSet[jjnewStateCnt++] = 353;
                  else if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 343;
                  else if (curChar == 68)
                     jjstateSet[jjnewStateCnt++] = 334;
                  else if (curChar == 72)
                     jjstateSet[jjnewStateCnt++] = 323;
                  else if (curChar == 86)
                     jjstateSet[jjnewStateCnt++] = 313;
                  if (curChar == 80)
                     jjstateSet[jjnewStateCnt++] = 304;
                  break;
               case 509:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 521;
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 513;
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 508;
                  break;
               case 396:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 420;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 412;
                  else if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 410;
                  else if (curChar == 110)
                  {
                     if (kind > 17)
                        kind = 17;
                  }
                  else if (curChar == 105)
                  {
                     if (kind > 17)
                        kind = 17;
                  }
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 405;
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 402;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 395;
                  if (curChar == 115)
                     { jjCheckNAdd(144); }
                  else if (curChar == 111)
                     { jjCheckNAdd(6); }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 399;
                  if (curChar == 111)
                     { jjCheckNAdd(97); }
                  break;
               case 379:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  if (curChar == 97)
                     { jjCheckNAdd(121); }
                  break;
               case 293:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 354;
                  else if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 298;
                  else if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 292;
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 344;
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 335;
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 324;
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 314;
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 305;
                  break;
               case 495:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 522;
                  else if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 504;
                  else if (curChar == 113)
                  {
                     if (kind > 17)
                        kind = 17;
                  }
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 514;
                  else if (curChar == 120)
                     { jjCheckNAdd(257); }
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 509;
                  break;
               case 192:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 203;
                  else if (curChar == 116)
                  {
                     if (kind > 17)
                        kind = 17;
                  }
                  else if (curChar == 110)
                  {
                     if (kind > 17)
                        kind = 17;
                  }
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 191;
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 199;
                  if (curChar == 111)
                     { jjCheckNAdd(193); }
                  break;
               case 183:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  if (curChar == 105)
                     { jjCheckNAdd(99); }
                  break;
               case 236:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  if (curChar == 116)
                  {
                     if (kind > 17)
                        kind = 17;
                  }
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 238;
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 235;
                  break;
               case 457:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 456;
                  break;
               case 214:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 213;
                  break;
               case 442:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 447;
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 444;
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 441;
                  break;
               case 1:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAddStates(6, 8); }
                  }
                  else if (curChar == 94)
                  {
                     if (kind > 82)
                        kind = 82;
                  }
                  if (curChar == 109)
                     { jjAddStates(9, 12); }
                  else if (curChar == 101)
                     { jjCheckNAddStates(13, 18); }
                  else if (curChar == 112)
                     { jjCheckNAddStates(19, 27); }
                  else if (curChar == 102)
                     { jjAddStates(28, 30); }
                  else if (curChar == 116)
                     { jjAddStates(31, 35); }
                  else if (curChar == 99)
                     { jjCheckNAddStates(36, 47); }
                  else if (curChar == 100)
                     { jjAddStates(48, 51); }
                  else if (curChar == 111)
                     { jjAddStates(52, 53); }
                  else if (curChar == 105)
                     { jjAddStates(54, 61); }
                  else if (curChar == 98)
                     { jjAddStates(62, 63); }
                  else if (curChar == 115)
                     { jjAddStates(64, 72); }
                  else if (curChar == 103)
                     { jjCheckNAddStates(73, 75); }
                  else if (curChar == 71)
                     { jjAddStates(76, 77); }
                  else if (curChar == 110)
                     { jjAddStates(78, 79); }
                  else if (curChar == 108)
                     { jjCheckNAddStates(80, 85); }
                  else if (curChar == 97)
                     { jjAddStates(86, 104); }
                  else if (curChar == 104)
                     { jjAddStates(105, 110); }
                  else if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 18;
                  else if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 11;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 456:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  if (curChar == 99)
                     { jjCheckNAdd(195); }
                  break;
               case 213:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 212;
                  break;
               case 106:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 118;
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 105;
                  break;
               case 199:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 202;
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 198;
                  if (curChar == 103)
                  {
                     if (kind > 17)
                        kind = 17;
                  }
                  break;
               case 56:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 92;
                  else if (curChar == 80)
                     jjstateSet[jjnewStateCnt++] = 86;
                  else if (curChar == 86)
                     jjstateSet[jjnewStateCnt++] = 70;
                  if (curChar == 80)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 474:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 485;
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 473;
                  break;
               case 423:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 433;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 430;
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 427;
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 424;
                  if (curChar == 97)
                     { jjCheckNAdd(99); }
                  break;
               case 541:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  if (curChar == 101)
                  {
                     if (kind > 17)
                        kind = 17;
                  }
                  break;
               case 540:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 363:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 368;
                  else if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 362;
                  break;
               case 207:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 214;
                  else if (curChar == 101)
                     { jjCheckNAdd(206); }
                  break;
               case 246:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  if (curChar == 113)
                     jjstateSet[jjnewStateCnt++] = 263;
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 260;
                  else if (curChar == 101)
                     { jjCheckNAdd(257); }
                  else if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 245;
                  if (curChar == 113)
                     { jjCheckNAdd(10); }
                  else if (curChar == 105)
                     { jjCheckNAdd(99); }
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 255;
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 248;
                  if (curChar == 101)
                     { jjCheckNAdd(144); }
                  break;
               case 57:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 93;
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 87;
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 71;
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 18:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 374:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 389;
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 377;
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 380;
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 373;
                  break;
               case 58:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 94;
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 78;
                  else if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 64;
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 88;
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 72;
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 458:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 492;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 486;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 468;
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 459;
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 457;
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 490;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 474;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 461;
                  else if (curChar == 105)
                  {
                     if (kind > 17)
                        kind = 17;
                  }
                  break;
               case 399:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 419;
                  else if (curChar == 116)
                     { jjCheckNAdd(129); }
                  else if (curChar == 115)
                     { jjCheckNAdd(129); }
                  if (curChar == 116)
                  {
                     if (kind > 17)
                        kind = 17;
                  }
                  else if (curChar == 115)
                  {
                     if (kind > 17)
                        kind = 17;
                  }
                  break;
               case 419:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 418;
                  break;
               case 292:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 291;
                  break;
               case 238:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(454); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 237;
                  break;
               case 2:
                  if (kind > 3)
                     kind = 3;
                  jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 6:
                  if (curChar == 116 && kind > 17)
                     kind = 17;
                  break;
               case 7:
               case 135:
                  if (curChar == 111)
                     { jjCheckNAdd(6); }
                  break;
               case 8:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 9:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 10:
                  if (curChar == 114 && kind > 17)
                     kind = 17;
                  break;
               case 11:
               case 443:
                  if (curChar == 111)
                     { jjCheckNAdd(10); }
                  break;
               case 12:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 13:
                  if (curChar == 110 && kind > 18)
                     kind = 18;
                  break;
               case 14:
               case 66:
               case 90:
               case 382:
               case 429:
                  if (curChar == 111)
                     { jjCheckNAdd(13); }
                  break;
               case 15:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 16:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 17:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 19:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 33:
                  { jjAddStates(111, 112); }
                  break;
               case 35:
                  if (curChar == 94 && kind > 82)
                     kind = 82;
                  break;
               case 38:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(113, 114); }
                  break;
               case 45:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(115, 116); }
                  break;
               case 49:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(117, 118); }
                  break;
               case 52:
                  if (curChar == 104)
                     { jjAddStates(105, 110); }
                  break;
               case 53:
                  if (curChar == 116 && kind > 18)
                     kind = 18;
                  break;
               case 54:
               case 461:
                  if (curChar == 114)
                     { jjCheckNAdd(53); }
                  break;
               case 55:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 59:
                  if (curChar == 109 && kind > 18)
                     kind = 18;
                  break;
               case 60:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 61:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 60;
                  break;
               case 62:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 63:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 64:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 65:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 67:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 68:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 67;
                  break;
               case 69:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 68;
                  break;
               case 70:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 69;
                  break;
               case 71:
                  if (curChar == 86)
                     jjstateSet[jjnewStateCnt++] = 70;
                  break;
               case 72:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 71;
                  break;
               case 73:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 72;
                  break;
               case 74:
                  if (curChar == 103 && kind > 18)
                     kind = 18;
                  break;
               case 75:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 74;
                  break;
               case 76:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 75;
                  break;
               case 77:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 76;
                  break;
               case 78:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 77;
                  break;
               case 79:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 78;
                  break;
               case 80:
                  if (curChar == 121 && kind > 18)
                     kind = 18;
                  break;
               case 81:
               case 294:
               case 470:
                  if (curChar == 116)
                     { jjCheckNAdd(80); }
                  break;
               case 82:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 81;
                  break;
               case 83:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 82;
                  break;
               case 84:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 83;
                  break;
               case 85:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 84;
                  break;
               case 86:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 85;
                  break;
               case 87:
                  if (curChar == 80)
                     jjstateSet[jjnewStateCnt++] = 86;
                  break;
               case 88:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 87;
                  break;
               case 89:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 88;
                  break;
               case 91:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 90;
                  break;
               case 92:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 91;
                  break;
               case 93:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 92;
                  break;
               case 94:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 93;
                  break;
               case 95:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 96:
                  if (curChar == 97)
                     { jjAddStates(86, 104); }
                  break;
               case 97:
                  if (curChar == 115 && kind > 17)
                     kind = 17;
                  break;
               case 99:
                  if (curChar == 110 && kind > 17)
                     kind = 17;
                  break;
               case 100:
                  if (curChar == 111)
                     { jjCheckNAdd(99); }
                  break;
               case 101:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 100;
                  break;
               case 102:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 101;
                  break;
               case 103:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 104:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 103;
                  break;
               case 105:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 104;
                  break;
               case 107:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 106;
                  break;
               case 108:
                  if (curChar == 108 && kind > 17)
                     kind = 17;
                  break;
               case 109:
                  if (curChar == 109)
                     { jjCheckNAdd(108); }
                  break;
               case 110:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 109;
                  break;
               case 112:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 111;
                  break;
               case 113:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 114:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 113;
                  break;
               case 115:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 114;
                  break;
               case 116:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 117:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 118:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 117;
                  break;
               case 119:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 118;
                  break;
               case 120:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 119;
                  break;
               case 121:
                  if (curChar == 121 && kind > 17)
                     kind = 17;
                  break;
               case 122:
                  if (curChar == 108)
                     { jjCheckNAdd(121); }
                  break;
               case 123:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 122;
                  break;
               case 124:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 123;
                  break;
               case 125:
               case 181:
                  if (curChar == 111)
                     { jjCheckNAdd(97); }
                  break;
               case 126:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 125;
                  break;
               case 127:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 126;
                  break;
               case 128:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 127;
                  break;
               case 129:
                  if (curChar == 104 && kind > 17)
                     kind = 17;
                  break;
               case 130:
                  if (curChar == 115)
                     { jjCheckNAdd(129); }
                  break;
               case 131:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 130;
                  break;
               case 132:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 131;
                  break;
               case 133:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 132;
                  break;
               case 134:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               case 136:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 135;
                  break;
               case 137:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 136;
                  break;
               case 138:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 137;
                  break;
               case 139:
               case 534:
                  if (curChar == 116)
                     { jjCheckNAdd(129); }
                  break;
               case 140:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 139;
                  break;
               case 141:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 140;
                  break;
               case 142:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 141;
                  break;
               case 143:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 142;
                  break;
               case 144:
                  if (curChar == 99 && kind > 17)
                     kind = 17;
                  break;
               case 145:
                  if (curChar == 115)
                     { jjCheckNAdd(144); }
                  break;
               case 146:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 145;
                  break;
               case 147:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 146;
                  break;
               case 148:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 147;
                  break;
               case 149:
               case 158:
               case 248:
               case 405:
                  if (curChar == 99)
                     { jjCheckNAdd(129); }
                  break;
               case 150:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 149;
                  break;
               case 151:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 150;
                  break;
               case 152:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 151;
                  break;
               case 153:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 152;
                  break;
               case 154:
                  if (curChar == 101)
                     { jjCheckNAdd(144); }
                  break;
               case 155:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 154;
                  break;
               case 156:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 155;
                  break;
               case 157:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 156;
                  break;
               case 159:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 158;
                  break;
               case 160:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 159;
                  break;
               case 161:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 160;
                  break;
               case 162:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 161;
                  break;
               case 163:
                  if (curChar == 105)
                     { jjCheckNAdd(99); }
                  break;
               case 164:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 163;
                  break;
               case 165:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 164;
                  break;
               case 166:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 165;
                  break;
               case 167:
               case 176:
               case 260:
               case 424:
                  if (curChar == 110)
                     { jjCheckNAdd(129); }
                  break;
               case 168:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 167;
                  break;
               case 169:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 168;
                  break;
               case 170:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 169;
                  break;
               case 171:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 170;
                  break;
               case 172:
                  if (curChar == 97)
                     { jjCheckNAdd(99); }
                  break;
               case 173:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 172;
                  break;
               case 174:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 173;
                  break;
               case 175:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 174;
                  break;
               case 177:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 176;
                  break;
               case 178:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 177;
                  break;
               case 179:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 178;
                  break;
               case 180:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 179;
                  break;
               case 182:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 181;
                  break;
               case 184:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 183;
                  break;
               case 186:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 185;
                  break;
               case 187:
                  if (curChar == 108)
                     { jjCheckNAddStates(80, 85); }
                  break;
               case 188:
                  if (curChar == 97 && kind > 17)
                     kind = 17;
                  break;
               case 189:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 188;
                  break;
               case 190:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 189;
                  break;
               case 191:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 190;
                  break;
               case 193:
                  if (curChar == 103 && kind > 17)
                     kind = 17;
                  break;
               case 194:
                  if (curChar == 111)
                     { jjCheckNAdd(193); }
                  break;
               case 195:
                  if (curChar == 101 && kind > 17)
                     kind = 17;
                  break;
               case 196:
               case 357:
                  if (curChar == 115)
                     { jjCheckNAdd(195); }
                  break;
               case 197:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 196;
                  break;
               case 198:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 197;
                  break;
               case 200:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 199;
                  break;
               case 203:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 202;
                  break;
               case 204:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 203;
                  break;
               case 205:
                  if (curChar == 110)
                     { jjAddStates(78, 79); }
                  break;
               case 206:
                  if (curChar == 113 && kind > 17)
                     kind = 17;
                  break;
               case 208:
                  if (curChar == 101)
                     { jjCheckNAdd(10); }
                  break;
               case 209:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 208;
                  break;
               case 210:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 209;
                  break;
               case 211:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 210;
                  break;
               case 212:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 211;
                  break;
               case 215:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 214;
                  break;
               case 216:
                  if (curChar == 71)
                     { jjAddStates(76, 77); }
                  break;
               case 217:
                  if (curChar == 108 && kind > 11)
                     kind = 11;
                  break;
               case 218:
               case 233:
                  if (curChar == 97)
                     { jjCheckNAdd(217); }
                  break;
               case 219:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 218;
                  break;
               case 220:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 219;
                  break;
               case 221:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 220;
                  break;
               case 222:
                  if (curChar == 76 && kind > 11)
                     kind = 11;
                  break;
               case 223:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 222;
                  break;
               case 224:
                  if (curChar == 66)
                     jjstateSet[jjnewStateCnt++] = 223;
                  break;
               case 225:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 224;
                  break;
               case 226:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 225;
                  break;
               case 229:
                  if (kind > 2)
                     kind = 2;
                  jjstateSet[jjnewStateCnt++] = 229;
                  break;
               case 232:
                  if (curChar == 103)
                     { jjCheckNAddStates(73, 75); }
                  break;
               case 234:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 233;
                  break;
               case 235:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 234;
                  break;
               case 237:
                  if (curChar == 101 && kind > 13)
                     kind = 13;
                  break;
               case 239:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 238;
                  break;
               case 240:
                  if (curChar == 115)
                     { jjAddStates(64, 72); }
                  break;
               case 241:
                  if (curChar == 115 && kind > 13)
                     kind = 13;
                  break;
               case 242:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 241;
                  break;
               case 243:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 242;
                  break;
               case 244:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 243;
                  break;
               case 245:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 244;
                  break;
               case 247:
                  if (curChar == 101)
                     { jjCheckNAdd(144); }
                  break;
               case 249:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 248;
                  break;
               case 250:
                  if (curChar == 99)
                     { jjCheckNAdd(97); }
                  break;
               case 251:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 250;
                  break;
               case 252:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 251;
                  break;
               case 253:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 252;
                  break;
               case 254:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 253;
                  break;
               case 255:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 254;
                  break;
               case 256:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 255;
                  break;
               case 257:
                  if (curChar == 112 && kind > 17)
                     kind = 17;
                  break;
               case 258:
                  if (curChar == 101)
                     { jjCheckNAdd(257); }
                  break;
               case 259:
                  if (curChar == 105)
                     { jjCheckNAdd(99); }
                  break;
               case 261:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 260;
                  break;
               case 262:
                  if (curChar == 113)
                     { jjCheckNAdd(10); }
                  break;
               case 263:
                  if (curChar == 114)
                     { jjCheckNAdd(6); }
                  break;
               case 264:
                  if (curChar == 113)
                     jjstateSet[jjnewStateCnt++] = 263;
                  break;
               case 265:
                  if (curChar == 98)
                     { jjAddStates(62, 63); }
                  break;
               case 266:
                  if (curChar == 97)
                     { jjCheckNAdd(10); }
                  break;
               case 267:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 266;
                  break;
               case 268:
                  if (curChar == 115 && kind > 18)
                     kind = 18;
                  break;
               case 269:
                  if (curChar == 105)
                     { jjCheckNAdd(268); }
                  break;
               case 270:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 269;
                  break;
               case 271:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 270;
                  break;
               case 272:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 271;
                  break;
               case 273:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 272;
                  break;
               case 274:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 273;
                  break;
               case 275:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 274;
                  break;
               case 276:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 275;
                  break;
               case 277:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 276;
                  break;
               case 278:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 277;
                  break;
               case 279:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 278;
                  break;
               case 280:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 279;
                  break;
               case 281:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 280;
                  break;
               case 282:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 281;
                  break;
               case 283:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 282;
                  break;
               case 284:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 283;
                  break;
               case 285:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 284;
                  break;
               case 286:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 285;
                  break;
               case 287:
                  if (curChar == 105)
                     { jjAddStates(54, 61); }
                  break;
               case 288:
                  if (curChar == 116)
                     { jjCheckNAdd(121); }
                  break;
               case 289:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 288;
                  break;
               case 290:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 289;
                  break;
               case 291:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 290;
                  break;
               case 295:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 294;
                  break;
               case 296:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 295;
                  break;
               case 297:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 296;
                  break;
               case 298:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 297;
                  break;
               case 299:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 298;
                  break;
               case 300:
                  if (curChar == 102 && kind > 18)
                     kind = 18;
                  break;
               case 301:
               case 307:
               case 346:
                  if (curChar == 79)
                     { jjCheckNAdd(300); }
                  break;
               case 302:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 301;
                  break;
               case 303:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 302;
                  break;
               case 304:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 303;
                  break;
               case 306:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 305;
                  break;
               case 308:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 307;
                  break;
               case 309:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 308;
                  break;
               case 310:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 309;
                  break;
               case 311:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 310;
                  break;
               case 312:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 311;
                  break;
               case 313:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 312;
                  break;
               case 314:
                  if (curChar == 86)
                     jjstateSet[jjnewStateCnt++] = 313;
                  break;
               case 315:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 314;
                  break;
               case 316:
                  if (curChar == 111 && kind > 18)
                     kind = 18;
                  break;
               case 317:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 316;
                  break;
               case 318:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 317;
                  break;
               case 319:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 318;
                  break;
               case 320:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 319;
                  break;
               case 321:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 320;
                  break;
               case 322:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 321;
                  break;
               case 323:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 322;
                  break;
               case 324:
                  if (curChar == 72)
                     jjstateSet[jjnewStateCnt++] = 323;
                  break;
               case 325:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 324;
                  break;
               case 326:
               case 337:
                  if (curChar == 66)
                     { jjCheckNAdd(80); }
                  break;
               case 327:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 326;
                  break;
               case 328:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 327;
                  break;
               case 329:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 328;
                  break;
               case 330:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 329;
                  break;
               case 331:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 330;
                  break;
               case 332:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 331;
                  break;
               case 333:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 332;
                  break;
               case 334:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 333;
                  break;
               case 335:
                  if (curChar == 68)
                     jjstateSet[jjnewStateCnt++] = 334;
                  break;
               case 336:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 335;
                  break;
               case 338:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 337;
                  break;
               case 339:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 338;
                  break;
               case 340:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 339;
                  break;
               case 341:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 340;
                  break;
               case 342:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 341;
                  break;
               case 343:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 342;
                  break;
               case 344:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 343;
                  break;
               case 345:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 344;
                  break;
               case 347:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 346;
                  break;
               case 348:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 347;
                  break;
               case 349:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 348;
                  break;
               case 350:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 349;
                  break;
               case 351:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 350;
                  break;
               case 352:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 351;
                  break;
               case 353:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 352;
                  break;
               case 354:
                  if (curChar == 80)
                     jjstateSet[jjnewStateCnt++] = 353;
                  break;
               case 355:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 354;
                  break;
               case 356:
                  if (curChar == 111)
                     { jjAddStates(52, 53); }
                  break;
               case 358:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 357;
                  break;
               case 359:
                  if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 358;
                  break;
               case 360:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 359;
                  break;
               case 361:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 360;
                  break;
               case 362:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 361;
                  break;
               case 364:
                  if (curChar == 73)
                     { jjCheckNAdd(13); }
                  break;
               case 365:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 364;
                  break;
               case 366:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 365;
                  break;
               case 367:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 366;
                  break;
               case 368:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 367;
                  break;
               case 369:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 368;
                  break;
               case 370:
                  if (curChar == 100)
                     { jjAddStates(48, 51); }
                  break;
               case 371:
                  if (curChar == 101)
                     { jjCheckNAdd(195); }
                  break;
               case 372:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 371;
                  break;
               case 375:
                  if (curChar == 100)
                     { jjCheckNAdd(195); }
                  break;
               case 376:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 375;
                  break;
               case 377:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 376;
                  break;
               case 378:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 377;
                  break;
               case 380:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 379;
                  break;
               case 381:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 380;
                  break;
               case 383:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 382;
                  break;
               case 384:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 383;
                  break;
               case 385:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 384;
                  break;
               case 386:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 385;
                  break;
               case 387:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 386;
                  break;
               case 388:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 387;
                  break;
               case 389:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 388;
                  break;
               case 390:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 389;
                  break;
               case 391:
                  if (curChar == 99)
                     { jjCheckNAddStates(36, 47); }
                  break;
               case 392:
                  if (curChar == 110)
                     { jjCheckNAdd(193); }
                  break;
               case 393:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 392;
                  break;
               case 394:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 393;
                  break;
               case 395:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 394;
                  break;
               case 397:
                  if (curChar == 105 && kind > 17)
                     kind = 17;
                  break;
               case 398:
                  if (curChar == 111)
                     { jjCheckNAdd(97); }
                  break;
               case 400:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 399;
                  break;
               case 401:
                  if (curChar == 111)
                     { jjCheckNAdd(6); }
                  break;
               case 402:
                  if (curChar == 116)
                     { jjCheckNAdd(129); }
                  break;
               case 403:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 402;
                  break;
               case 404:
                  if (curChar == 115)
                     { jjCheckNAdd(144); }
                  break;
               case 406:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 405;
                  break;
               case 407:
                  if (curChar == 111)
                     { jjCheckNAdd(108); }
                  break;
               case 408:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 407;
                  break;
               case 409:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 408;
                  break;
               case 410:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 409;
                  break;
               case 411:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 410;
                  break;
               case 412:
                  if (curChar == 105)
                     { jjCheckNAdd(108); }
                  break;
               case 413:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 412;
                  break;
               case 414:
                  if (curChar == 114 && kind > 18)
                     kind = 18;
                  break;
               case 415:
               case 476:
               case 506:
                  if (curChar == 101)
                     { jjCheckNAdd(414); }
                  break;
               case 416:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 415;
                  break;
               case 417:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 416;
                  break;
               case 418:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 417;
                  break;
               case 420:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 419;
                  break;
               case 421:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 420;
                  break;
               case 422:
                  if (curChar == 116)
                     { jjAddStates(31, 35); }
                  break;
               case 425:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 424;
                  break;
               case 426:
                  if (curChar == 101)
                     { jjCheckNAdd(97); }
                  break;
               case 427:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 426;
                  break;
               case 428:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 427;
                  break;
               case 430:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 429;
                  break;
               case 431:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 430;
                  break;
               case 432:
                  if (curChar == 101 && kind > 28)
                     kind = 28;
                  break;
               case 433:
                  if (curChar == 117)
                     { jjCheckNAdd(432); }
                  break;
               case 434:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 433;
                  break;
               case 435:
                  if (curChar == 102)
                     { jjAddStates(28, 30); }
                  break;
               case 436:
                  if (curChar == 97)
                     { jjCheckNAdd(108); }
                  break;
               case 437:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 436;
                  break;
               case 438:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 437;
                  break;
               case 439:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 438;
                  break;
               case 440:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 439;
                  break;
               case 441:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 440;
                  break;
               case 444:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 443;
                  break;
               case 445:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 444;
                  break;
               case 446:
                  if (curChar == 115)
                     { jjCheckNAdd(432); }
                  break;
               case 447:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 446;
                  break;
               case 448:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 447;
                  break;
               case 449:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  { jjCheckNAddStates(6, 8); }
                  break;
               case 450:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 452:
               case 453:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddTwoStates(451, 453); }
                  break;
               case 454:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  { jjCheckNAdd(454); }
                  break;
               case 455:
                  if (curChar == 112)
                     { jjCheckNAddStates(19, 27); }
                  break;
               case 459:
               case 536:
                  if (curChar == 117)
                     { jjCheckNAdd(97); }
                  break;
               case 460:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 459;
                  break;
               case 462:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 461;
                  break;
               case 463:
                  if (curChar == 100 && kind > 18)
                     kind = 18;
                  break;
               case 464:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 463;
                  break;
               case 465:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 464;
                  break;
               case 466:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 465;
                  break;
               case 467:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 466;
                  break;
               case 468:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 467;
                  break;
               case 469:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 468;
                  break;
               case 471:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 470;
                  break;
               case 472:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 471;
                  break;
               case 473:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 472;
                  break;
               case 475:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 474;
                  break;
               case 477:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 476;
                  break;
               case 478:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 477;
                  break;
               case 479:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 478;
                  break;
               case 480:
                  if (curChar == 66)
                     jjstateSet[jjnewStateCnt++] = 479;
                  break;
               case 481:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 480;
                  break;
               case 482:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 481;
                  break;
               case 483:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 482;
                  break;
               case 484:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 483;
                  break;
               case 485:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 484;
                  break;
               case 486:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 485;
                  break;
               case 487:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 486;
                  break;
               case 488:
                  if (curChar == 114 && kind > 19)
                     kind = 19;
                  break;
               case 489:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 488;
                  break;
               case 490:
                  if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 489;
                  break;
               case 491:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 490;
                  break;
               case 492:
                  if (curChar == 119 && kind > 19)
                     kind = 19;
                  break;
               case 493:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 492;
                  break;
               case 494:
                  if (curChar == 101)
                     { jjCheckNAddStates(13, 18); }
                  break;
               case 496:
                  if (curChar == 108)
                     { jjCheckNAdd(195); }
                  break;
               case 497:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 496;
                  break;
               case 498:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 497;
                  break;
               case 499:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 498;
                  break;
               case 500:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 499;
                  break;
               case 501:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 500;
                  break;
               case 502:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 501;
                  break;
               case 503:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 502;
                  break;
               case 504:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 503;
                  break;
               case 505:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 504;
                  break;
               case 507:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 506;
                  break;
               case 508:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 507;
                  break;
               case 510:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 509;
                  break;
               case 511:
                  if (curChar == 101)
                     { jjCheckNAdd(268); }
                  break;
               case 512:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 511;
                  break;
               case 513:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 512;
                  break;
               case 514:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 513;
                  break;
               case 515:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 514;
                  break;
               case 516:
                  if (curChar == 110)
                     { jjCheckNAdd(53); }
                  break;
               case 517:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 516;
                  break;
               case 518:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 517;
                  break;
               case 519:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 518;
                  break;
               case 520:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 519;
                  break;
               case 521:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 520;
                  break;
               case 522:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 521;
                  break;
               case 523:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 522;
                  break;
               case 524:
                  if (curChar == 109)
                     { jjAddStates(9, 12); }
                  break;
               case 525:
                  if (curChar == 108 && kind > 9)
                     kind = 9;
                  break;
               case 526:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 525;
                  break;
               case 527:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 526;
                  break;
               case 528:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 527;
                  break;
               case 529:
                  if (curChar == 101 && kind > 9)
                     kind = 9;
                  break;
               case 530:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 529;
                  break;
               case 531:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 530;
                  break;
               case 532:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 531;
                  break;
               case 533:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 532;
                  break;
               case 535:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 534;
                  break;
               case 537:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 536;
                  break;
               case 538:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 537;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 2:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 3)
                     kind = 3;
                  jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 33:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjAddStates(111, 112); }
                  break;
               case 229:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 2)
                     kind = 2;
                  jjstateSet[jjnewStateCnt++] = 229;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 539 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_5(int pos, long active0, long active1){
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_5(int pos, long active0, long active1){
   return jjMoveNfa_5(jjStopStringLiteralDfa_5(pos, active0, active1), pos + 1);
}
private int jjMoveStringLiteralDfa0_5(){
   switch(curChar)
   {
      case 44:
         return jjStopAtPos(0, 73);
      case 93:
         return jjStopAtPos(0, 67);
      default :
         return jjMoveNfa_5(1, 0);
   }
}
private int jjMoveNfa_5(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 7;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
               case 0:
                  if ((0x100000200L & l) == 0L)
                     break;
                  kind = 59;
                  { jjCheckNAdd(0); }
                  break;
               case 2:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(2, 3); }
                  break;
               case 3:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 5:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddTwoStates(3, 5); }
                  break;
               case 6:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjstateSet[jjnewStateCnt++] = 6;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  { jjCheckNAddStates(119, 121); }
                  break;
               case 2:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(2, 3); }
                  break;
               case 4:
               case 5:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddTwoStates(3, 5); }
                  break;
               case 6:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  { jjCheckNAdd(6); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 7 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_1(){
   switch(curChar)
   {
      case 42:
         return jjMoveStringLiteralDfa1_1(0x20L);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa1_1(long active0){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 1;
   }
   switch(curChar)
   {
      case 47:
         if ((active0 & 0x20L) != 0L)
            return jjStopAtPos(1, 5);
         break;
      default :
         return 2;
   }
   return 2;
}
private final int jjStopStringLiteralDfa_3(int pos, long active0, long active1){
   switch (pos)
   {
      case 0:
         if ((active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 74;
            return 21;
         }
         return -1;
      case 1:
         if ((active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 1;
            return 21;
         }
         return -1;
      case 2:
         if ((active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 2;
            return 21;
         }
         return -1;
      case 3:
         if ((active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 3;
            return 21;
         }
         return -1;
      case 4:
         if ((active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 4;
            return 21;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_3(int pos, long active0, long active1){
   return jjMoveNfa_3(jjStopStringLiteralDfa_3(pos, active0, active1), pos + 1);
}
private int jjMoveStringLiteralDfa0_3(){
   switch(curChar)
   {
      case 44:
         return jjStopAtPos(0, 73);
      case 46:
         return jjStopAtPos(0, 75);
      case 61:
         return jjStopAtPos(0, 68);
      case 91:
         return jjStopAtPos(0, 65);
      case 108:
         return jjMoveStringLiteralDfa1_3(0x20L);
      case 123:
         return jjStopAtPos(0, 66);
      default :
         return jjMoveNfa_3(10, 0);
   }
}
private int jjMoveStringLiteralDfa1_3(long active1){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(0, 0L, active1);
      return 1;
   }
   switch(curChar)
   {
      case 111:
         return jjMoveStringLiteralDfa2_3(active1, 0x20L);
      default :
         break;
   }
   return jjStartNfa_3(0, 0L, active1);
}
private int jjMoveStringLiteralDfa2_3(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_3(0, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(1, 0L, active1);
      return 2;
   }
   switch(curChar)
   {
      case 99:
         return jjMoveStringLiteralDfa3_3(active1, 0x20L);
      default :
         break;
   }
   return jjStartNfa_3(1, 0L, active1);
}
private int jjMoveStringLiteralDfa3_3(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_3(1, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(2, 0L, active1);
      return 3;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa4_3(active1, 0x20L);
      default :
         break;
   }
   return jjStartNfa_3(2, 0L, active1);
}
private int jjMoveStringLiteralDfa4_3(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_3(2, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(3, 0L, active1);
      return 4;
   }
   switch(curChar)
   {
      case 116:
         return jjMoveStringLiteralDfa5_3(active1, 0x20L);
      default :
         break;
   }
   return jjStartNfa_3(3, 0L, active1);
}
private int jjMoveStringLiteralDfa5_3(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_3(3, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(4, 0L, active1);
      return 5;
   }
   switch(curChar)
   {
      case 101:
         if ((active1 & 0x20L) != 0L)
            return jjStartNfaWithStates_3(5, 69, 21);
         break;
      default :
         break;
   }
   return jjStartNfa_3(4, 0L, active1);
}
private int jjStartNfaWithStates_3(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_3(state, pos + 1);
}
private int jjMoveNfa_3(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 34;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 10:
                  if ((0x2400L & l) != 0L)
                  {
                     if (kind > 61)
                        kind = 61;
                  }
                  else if ((0x100000200L & l) != 0L)
                  {
                     if (kind > 59)
                        kind = 59;
                     { jjCheckNAdd(0); }
                  }
                  else if (curChar == 34)
                     { jjCheckNAddTwoStates(23, 24); }
                  else if (curChar == 59)
                  {
                     if (kind > 62)
                        kind = 62;
                  }
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 0:
                  if ((0x100000200L & l) == 0L)
                     break;
                  if (kind > 59)
                     kind = 59;
                  { jjCheckNAdd(0); }
                  break;
               case 16:
                  if ((0x2400L & l) != 0L && kind > 61)
                     kind = 61;
                  break;
               case 17:
                  if (curChar == 10 && kind > 61)
                     kind = 61;
                  break;
               case 18:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 19:
                  if (curChar == 59 && kind > 62)
                     kind = 62;
                  break;
               case 21:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 22:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(23, 24); }
                  break;
               case 23:
                  if ((0xfffffffbffffdbffL & l) != 0L)
                     { jjCheckNAddTwoStates(23, 24); }
                  break;
               case 24:
                  if (curChar == 34 && kind > 76)
                     kind = 76;
                  break;
               case 27:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjAddStates(122, 123); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 10:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(21); }
                  }
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 32;
                  else if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 14;
                  else if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 1:
                  if (curChar == 110 && kind > 60)
                     kind = 60;
                  break;
               case 2:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 3:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 4:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 5:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 6:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 7:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 8:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 9:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 11:
                  if (curChar == 101 && kind > 60)
                     kind = 60;
                  break;
               case 12:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 13:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 14:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 15:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 20:
               case 21:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  { jjCheckNAdd(21); }
                  break;
               case 23:
                  { jjAddStates(124, 125); }
                  break;
               case 25:
                  if (curChar == 98)
                     { jjCheckNAddTwoStates(26, 27); }
                  break;
               case 26:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(26, 27); }
                  break;
               case 28:
                  if (curChar == 95 && kind > 77)
                     kind = 77;
                  break;
               case 29:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 30:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 31:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 32:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 33:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 23:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjAddStates(124, 125); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 34 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_2()
{
   return jjMoveNfa_2(5, 0);
}
private int jjMoveNfa_2(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 35;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 5:
                  if (curChar == 115)
                     { jjAddStates(126, 127); }
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 25;
                  else if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 19;
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 13;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 7;
                  else if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 0:
                  if (curChar == 110)
                     kind = 57;
                  break;
               case 1:
                  if (curChar == 97)
                     { jjCheckNAdd(0); }
                  break;
               case 2:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 3:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 4:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 6:
                  if (curChar == 102)
                     kind = 57;
                  break;
               case 7:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 8:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 9:
                  if (curChar == 116 && kind > 57)
                     kind = 57;
                  break;
               case 10:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 11:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 12:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 13:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 14:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 15:
                  if (curChar == 108 && kind > 57)
                     kind = 57;
                  break;
               case 16:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 17:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 18:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 19:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 20:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 21:
                  if (curChar == 116 && kind > 58)
                     kind = 58;
                  break;
               case 22:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 23:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 24:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 25:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 26:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 27:
                  if (curChar == 115)
                     { jjAddStates(126, 127); }
                  break;
               case 28:
                  if (curChar == 103)
                     { jjCheckNAdd(0); }
                  break;
               case 29:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 30:
                  if (curChar == 115 && kind > 57)
                     kind = 57;
                  break;
               case 31:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 32:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 33:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 34:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 35 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_4(int pos, long active0, long active1){
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_4(int pos, long active0, long active1){
   return jjMoveNfa_4(jjStopStringLiteralDfa_4(pos, active0, active1), pos + 1);
}
private int jjMoveStringLiteralDfa0_4(){
   switch(curChar)
   {
      case 44:
         return jjStopAtPos(0, 73);
      case 46:
         return jjStopAtPos(0, 75);
      default :
         return jjMoveNfa_4(1, 0);
   }
}
private int jjMoveNfa_4(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 12;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((0x100000200L & l) != 0L)
                  {
                     if (kind > 59)
                        kind = 59;
                     { jjCheckNAdd(0); }
                  }
                  else if (curChar == 34)
                     { jjCheckNAddTwoStates(4, 5); }
                  else if (curChar == 41)
                  {
                     if (kind > 72)
                        kind = 72;
                  }
                  else if (curChar == 40)
                  {
                     if (kind > 71)
                        kind = 71;
                  }
                  break;
               case 0:
                  if ((0x100000200L & l) == 0L)
                     break;
                  if (kind > 59)
                     kind = 59;
                  { jjCheckNAdd(0); }
                  break;
               case 2:
                  if (curChar == 41 && kind > 72)
                     kind = 72;
                  break;
               case 3:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(4, 5); }
                  break;
               case 4:
                  if ((0xfffffffbffffdbffL & l) != 0L)
                     { jjCheckNAddTwoStates(4, 5); }
                  break;
               case 5:
                  if (curChar == 34 && kind > 76)
                     kind = 76;
                  break;
               case 7:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(7, 8); }
                  break;
               case 8:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 10:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddTwoStates(8, 10); }
                  break;
               case 11:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjstateSet[jjnewStateCnt++] = 11;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  { jjCheckNAddStates(128, 130); }
                  break;
               case 4:
                  { jjAddStates(131, 132); }
                  break;
               case 7:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(7, 8); }
                  break;
               case 9:
               case 10:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddTwoStates(8, 10); }
                  break;
               case 11:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  { jjCheckNAdd(11); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 4:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjAddStates(131, 132); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 12 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_6(int pos, long active0, long active1){
   switch (pos)
   {
      case 0:
         if ((active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 74;
            return 2;
         }
         return -1;
      case 1:
         if ((active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 1;
            return 2;
         }
         return -1;
      case 2:
         if ((active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 2;
            return 2;
         }
         return -1;
      case 3:
         if ((active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 3;
            return 2;
         }
         return -1;
      case 4:
         if ((active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 4;
            return 2;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_6(int pos, long active0, long active1){
   return jjMoveNfa_6(jjStopStringLiteralDfa_6(pos, active0, active1), pos + 1);
}
private int jjMoveStringLiteralDfa0_6(){
   switch(curChar)
   {
      case 44:
         return jjStopAtPos(0, 73);
      case 46:
         return jjStopAtPos(0, 75);
      case 61:
         return jjStopAtPos(0, 68);
      case 91:
         return jjStopAtPos(0, 65);
      case 108:
         return jjMoveStringLiteralDfa1_6(0x20L);
      case 123:
         return jjStopAtPos(0, 66);
      case 125:
         return jjStopAtPos(0, 63);
      default :
         return jjMoveNfa_6(1, 0);
   }
}
private int jjMoveStringLiteralDfa1_6(long active1){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_6(0, 0L, active1);
      return 1;
   }
   switch(curChar)
   {
      case 111:
         return jjMoveStringLiteralDfa2_6(active1, 0x20L);
      default :
         break;
   }
   return jjStartNfa_6(0, 0L, active1);
}
private int jjMoveStringLiteralDfa2_6(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_6(0, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_6(1, 0L, active1);
      return 2;
   }
   switch(curChar)
   {
      case 99:
         return jjMoveStringLiteralDfa3_6(active1, 0x20L);
      default :
         break;
   }
   return jjStartNfa_6(1, 0L, active1);
}
private int jjMoveStringLiteralDfa3_6(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_6(1, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_6(2, 0L, active1);
      return 3;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa4_6(active1, 0x20L);
      default :
         break;
   }
   return jjStartNfa_6(2, 0L, active1);
}
private int jjMoveStringLiteralDfa4_6(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_6(2, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_6(3, 0L, active1);
      return 4;
   }
   switch(curChar)
   {
      case 116:
         return jjMoveStringLiteralDfa5_6(active1, 0x20L);
      default :
         break;
   }
   return jjStartNfa_6(3, 0L, active1);
}
private int jjMoveStringLiteralDfa5_6(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_6(3, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_6(4, 0L, active1);
      return 5;
   }
   switch(curChar)
   {
      case 101:
         if ((active1 & 0x20L) != 0L)
            return jjStartNfaWithStates_6(5, 69, 2);
         break;
      default :
         break;
   }
   return jjStartNfa_6(4, 0L, active1);
}
private int jjStartNfaWithStates_6(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_6(state, pos + 1);
}
private int jjMoveNfa_6(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 6;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((0x100002600L & l) != 0L)
                  {
                     if (kind > 64)
                        kind = 64;
                     { jjCheckNAdd(0); }
                  }
                  else if (curChar == 34)
                     { jjCheckNAddTwoStates(4, 5); }
                  break;
               case 0:
                  if ((0x100002600L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAdd(0); }
                  break;
               case 2:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 3:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(4, 5); }
                  break;
               case 4:
                  if ((0xfffffffbffffdbffL & l) != 0L)
                     { jjCheckNAddTwoStates(4, 5); }
                  break;
               case 5:
                  if (curChar == 34 && kind > 76)
                     kind = 76;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
               case 2:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  { jjCheckNAdd(2); }
                  break;
               case 4:
                  { jjAddStates(131, 132); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 4:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjAddStates(131, 132); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 6 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, "\151\155\160\157\162\164", null, 
"\146\165\156\143\164\151\157\156", null, "\141\163", null, "\143\157\155\160\141\162\164\155\145\156\164", 
"\165\156\151\164", "\163\165\142\164\171\160\145", null, null, null, "\147\145\161", 
"\154\145\161", "\141\156\144", "\157\162", "\46", "\174", 
"\160\151\145\143\145\167\151\163\145", "\144\145\154\145\164\145", null, "\145\156\144", "\143\157\156\163\164", 
"\166\141\162", "\151\156", "\44", "\141\163\163\145\162\164", 
"\163\165\142\163\164\141\156\143\145\117\156\154\171", "\145\154\163\145", "\151\163", "\150\141\163", "\72", null, null, null, 
"\141\164", "\141\146\164\145\162", "\160\162\151\157\162\151\164\171", 
"\146\162\157\155\124\162\151\147\147\145\162", "\160\145\162\163\151\163\164\145\156\164", "\164\60", "\53", "\55", 
"\156\157\164", "\73", null, "\51", "\50", "\100", null, null, null, null, null, null, "\175", 
null, "\133", "\173", "\135", "\75", "\154\157\143\141\164\145", null, null, null, 
"\54", null, "\56", null, null, null, null, "\74", "\76", null, "\52", null, null, };
protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}
static final int[] jjnextStates = {
   42, 43, 48, 49, 230, 231, 450, 451, 454, 528, 533, 535, 538, 206, 495, 505, 
   510, 515, 523, 397, 458, 460, 462, 469, 475, 487, 491, 493, 442, 445, 448, 423, 
   425, 428, 431, 434, 396, 397, 99, 398, 400, 401, 403, 404, 406, 411, 413, 421, 
   374, 378, 381, 390, 363, 369, 293, 299, 306, 315, 325, 336, 345, 355, 267, 286, 
   246, 247, 249, 256, 258, 259, 261, 262, 264, 236, 239, 6, 221, 226, 207, 215, 
   192, 99, 194, 200, 6, 204, 98, 107, 120, 124, 128, 134, 138, 143, 148, 153, 
   157, 162, 166, 171, 175, 180, 182, 184, 186, 58, 65, 73, 79, 89, 95, 33, 
   34, 39, 40, 46, 47, 50, 51, 2, 3, 6, 27, 29, 23, 24, 29, 34, 
   7, 8, 11, 4, 5, 
};

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(Exception e)
   {
      jjmatchedKind = 0;
      jjmatchedPos = -1;
      matchedToken = jjFillToken();
      matchedToken.specialToken = specialToken;
      return matchedToken;
   }
   image = jjimage;
   image.setLength(0);
   jjimageLen = 0;

   switch(curLexState)
   {
     case 0:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_0();
       break;
     case 1:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_1();
       if (jjmatchedPos == 0 && jjmatchedKind > 6)
       {
          jjmatchedKind = 6;
       }
       break;
     case 2:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_2();
       break;
     case 3:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_3();
       break;
     case 4:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_4();
       break;
     case 5:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_5();
       break;
     case 6:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_6();
       break;
   }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
           matchedToken.specialToken = specialToken;
           TokenLexicalActions(matchedToken);
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else
        {
           if ((jjtoSpecial[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
           {
              matchedToken = jjFillToken();
              if (specialToken == null)
                 specialToken = matchedToken;
              else
              {
                 matchedToken.specialToken = specialToken;
                 specialToken = (specialToken.next = matchedToken);
              }
              SkipLexicalActions(matchedToken);
           }
           else
              SkipLexicalActions(null);
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

void SkipLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
void MoreLexicalActions()
{
   jjimageLen += (lengthOfMatch = jjmatchedPos + 1);
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 63 :
        image.append(jjstrLiteralImages[63]);
        lengthOfMatch = jjstrLiteralImages[63].length();
                  SwitchTo((int)lexicalStateStack.pop());
         break;
      case 65 :
        image.append(jjstrLiteralImages[65]);
        lengthOfMatch = jjstrLiteralImages[65].length();
                             lexicalStateStack.push(curLexState);
         break;
      case 66 :
        image.append(jjstrLiteralImages[66]);
        lengthOfMatch = jjstrLiteralImages[66].length();
                     lexicalStateStack.push(curLexState);
         break;
      case 67 :
        image.append(jjstrLiteralImages[67]);
        lengthOfMatch = jjstrLiteralImages[67].length();
                            SwitchTo((int)lexicalStateStack.pop());
         break;
      case 69 :
        image.append(jjstrLiteralImages[69]);
        lengthOfMatch = jjstrLiteralImages[69].length();
                                    lexicalStateStack.push(curLexState);
         break;
      case 72 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                     SwitchTo((int)lexicalStateStack.pop());
         break;
      default :
         break;
   }
}
private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

    /** Constructor. */
    public AntimonyNotationParserTokenManager(SimpleCharStream stream){

      if (SimpleCharStream.staticFlag)
            throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");

    input_stream = stream;
  }

  /** Constructor. */
  public AntimonyNotationParserTokenManager (SimpleCharStream stream, int lexState){
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Reinitialise parser. */
  
  public void ReInit(SimpleCharStream stream)
  {


    jjmatchedPos =
    jjnewStateCnt =
    0;
    curLexState = defaultLexState;
    input_stream = stream;
    ReInitRounds();
  }

  private void ReInitRounds()
  {
    int i;
    jjround = 0x80000001;
    for (i = 539; i-- > 0;)
      jjrounds[i] = 0x80000000;
  }

  /** Reinitialise parser. */
  public void ReInit(SimpleCharStream stream, int lexState)
  
  {
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Switch to specified lex state. */
  public void SwitchTo(int lexState)
  {
    if (lexState >= 7 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
    else
      curLexState = lexState;
  }


/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
   "ML_COMMENT",
   "ANNOTATION",
   "PROPERTY",
   "LOCATE",
   "LIST",
   "CONTAINER",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, -1, -1, -1, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, 2, 3, 3, -1, -1, 0, 0, -1, -1, 5, 6, -1, -1, 4, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
};
static final long[] jjtoToken = {
   0xf7ffffffffffff81L, 0x2f3ffeL, 
};
static final long[] jjtoSkip = {
   0x80000000000007eL, 0x1L, 
};
static final long[] jjtoSpecial = {
   0x80000000000007eL, 0x1L, 
};
static final long[] jjtoMore = {
   0x0L, 0x0L, 
};
    protected SimpleCharStream  input_stream;

    private final int[] jjrounds = new int[539];
    private final int[] jjstateSet = new int[2 * 539];
    private final StringBuilder jjimage = new StringBuilder();
    private StringBuilder image = jjimage;
    private int jjimageLen;
    private int lengthOfMatch;
    protected int curChar;
}

/* Generated By:JJTree: Do not edit this line. AstConversionFactor.java Version 7.0 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=true,NODE_PREFIX=Ast,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package biouml.plugins.antimony.astparser_v2;

public class AstConversionFactor extends SimpleNode
{
    public final static String EXTENT_CONVERSION_FACTOR = "extentconv";
    public final static String TIME_CONVERSION_FACTOR = "timeconv";

    public AstConversionFactor(int id)
    {
        super(id);
    }

    public AstConversionFactor(AntimonyNotationParser p, int id)
    {
        super(p, id);
    }

    private String factor;

    public String getFactor()
    {
        return factor;
    }

    public void setFactor(String factor)
    {
        this.factor = factor;
    }

    @Override
    public String toString()
    {
        return factor;
    }

    public String getValue()
    {
        for( int i = 0; i < this.jjtGetNumChildren(); i++ )
            if( this.jjtGetChild(i) instanceof AstSymbol )
            {
                return ( (AstSymbol)this.jjtGetChild(i) ).getName();
            }
        return null;
    }

    public void setValue(String value)
    {
        for( int i = 0; i < this.jjtGetNumChildren(); i++ )
            if( this.jjtGetChild(i) instanceof AstSymbol )
            {
                ( (AstSymbol)this.jjtGetChild(i) ).setName(value);
                return;
            }
    }
}
/* JavaCC - OriginalChecksum=34f1d0d510bd308b5c038ecc82d8c3c5 (do not edit this line) */

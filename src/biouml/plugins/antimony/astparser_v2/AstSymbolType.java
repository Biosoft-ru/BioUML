/* Generated By:JJTree: Do not edit this line. AstSymbolType.java Version 7.0 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=true,NODE_PREFIX=Ast,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package biouml.plugins.antimony.astparser_v2;

import java.util.ArrayList;

public class AstSymbolType extends SimpleNode
{
    public final static String BUS = "bus";
    public final static String COMPARTMENT = "compartment";
    public final static String SPECIES = "species";
    public final static String PARAMETERS = "var";
    public final static String GENE = "gene";

    public AstSymbolType(int id)
    {
        super(id);
    }

    public AstSymbolType(AntimonyNotationParser p, int id)
    {
        super(p, id);
    }

    private String type;



    public String getType()
    {
        return type;
    }

    public void setType(String type)
    {
        this.type = type;
    }

    public String toString()
    {
        return type;
    }

    public ArrayList<Node> getSymbols()
    {
        ArrayList<Node> symbols = new ArrayList<Node>();
        for( int i = 0; i < this.jjtGetNumChildren(); i++ )
            if( this.jjtGetChild(i) instanceof AstSymbol )
                symbols.add(this.jjtGetChild(i));
        return symbols;
    }

    public boolean isSubstanceOnly()
    {
        for( int i = 0; i < this.jjtGetNumChildren(); i++ )
            if( this.jjtGetChild(i) instanceof AstSubstanceOnly )
                return true;
        return false;
    }

}
/* JavaCC - OriginalChecksum=0a1b9b7b3f37e20f0e2d906078c1caf9 (do not edit this line) */

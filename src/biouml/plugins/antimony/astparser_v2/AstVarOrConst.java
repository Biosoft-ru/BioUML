/* Generated By:JJTree: Do not edit this line. AstVarOrConst.java Version 7.0 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=true,NODE_PREFIX=Ast,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package biouml.plugins.antimony.astparser_v2;

public class AstVarOrConst extends SimpleNode
{
    public final static String CONST = "const";
    public final static String VAR = "var";

    public AstVarOrConst(int id)
    {
        super(id);
    }

    public AstVarOrConst(AntimonyNotationParser p, int id)
    {
        super(p, id);
    }

    private boolean isConst = false;

    public void setType(String str)
    {
        if( str.equals(CONST) )
            isConst = true;
        else if( str.equals(VAR) )
            isConst = false;
    }

    public void setType(boolean isConst)
    {
        this.isConst = isConst;
    }

    /**
     * return first child which is AstSymbolType
     *  and return null if such child doesn't exist 
     */
    public AstSymbolType getSymbolType()
    {
        for( int i = 0; i < this.jjtGetNumChildren(); i++ )
        {
            if( this.jjtGetChild(i) instanceof AstSymbolType )
                return ( (AstSymbolType)this.jjtGetChild(i) );
        }

        return null;
    }

    public boolean isConst()
    {
        return isConst;
    }

    public String toString()
    {
        if( isConst == true )
            return "const";
        else
            return "var";
    }

}
/* JavaCC - OriginalChecksum=bcffce216fa9ee1547cf96473e32fd71 (do not edit this line) */

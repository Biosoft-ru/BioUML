/* Generated By:JJTree: Do not edit this line. BNGObservable.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=true,NODE_PREFIX=BNG,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package biouml.plugins.bionetgen.bnglparser;

import javax.annotation.Nonnull;

public class BNGObservable extends SimpleNode
{
    public static final String IS_MATCH_ONCE = "Species";
    public static final String IS_NOT_MATCH_ONCE = "Molecules";

    protected boolean matchOnce;

    public boolean isMatchOnce()
    {
        return matchOnce;
    }

    public void setMatchOnce(boolean matchOnce)
    {
        if( matchOnce == this.matchOnce )
            return;
        this.matchOnce = matchOnce;
        for( int i = 0; i < jjtGetNumChildren(); i++ )
        {
            String childName = children[i].getName();
            if( IS_MATCH_ONCE.equals(childName) || IS_NOT_MATCH_ONCE.equals(childName) )
            {
                BNGSimpleElement element = new BNGSimpleElement(BionetgenParser.JJTSIMPLEELEMENT);
                if( matchOnce )
                    element.setName(IS_MATCH_ONCE);
                else
                    element.setName(IS_NOT_MATCH_ONCE);
                element.transferSpecialTokens((SimpleNode)children[i]);
                jjtAddChild(element, i);
                element.jjtSetParent(this);
                return;
            }
        }
    }

    public void changeName(@Nonnull String newName)
    {
        if( newName.isEmpty() )
            return;
        setName(newName);
        for( int i = 0; i < jjtGetNumChildren(); i++ )
        {
            String childName = children[i].getName();
            if( IS_MATCH_ONCE.equals(childName) || IS_NOT_MATCH_ONCE.equals(childName) )
            {
                i++;
                if( i == jjtGetNumChildren() )
                    return;
                BNGSimpleElement element = new BNGSimpleElement(BionetgenParser.JJTSIMPLEELEMENT);
                element.setName(newName);
                element.transferSpecialTokens((SimpleNode)children[i]);
                jjtAddChild(element, i);
                element.jjtSetParent(this);
                return;
            }
        }
    }

    @Override
    public String toBNGString()
    {
        return "";
    }

    public BNGObservable(int id)
    {
        super(id);
    }

    public BNGObservable(BionetgenParser p, int id)
    {
        super(p, id);
    }
}
/* JavaCC - OriginalChecksum=3e964985c8a145688596dd1bfa3e01db (do not edit this line) */

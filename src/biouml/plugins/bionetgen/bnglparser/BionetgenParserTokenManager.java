/* Generated By:JJTree&JavaCC: Do not edit this line. BionetgenParserTokenManager.java */
package biouml.plugins.bionetgen.bnglparser;

import ru.biosoft.util.JavaccCharStream;

/** Token Manager. */
public class BionetgenParserTokenManager implements BionetgenParserConstants
{

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x80L) != 0L)
         {
            jjmatchedKind = 45;
            return 253;
         }
         if ((active0 & 0x786000L) != 0L)
         {
            jjmatchedKind = 45;
            return 346;
         }
         if ((active0 & 0x4000000000000L) != 0L)
            return 28;
         if ((active0 & 0x808000L) != 0L)
         {
            jjmatchedKind = 45;
            return 132;
         }
         if ((active0 & 0x400L) != 0L)
         {
            jjmatchedKind = 45;
            return 20;
         }
         if ((active0 & 0x40000L) != 0L)
         {
            jjmatchedKind = 45;
            return 260;
         }
         if ((active0 & 0x40000200L) != 0L)
         {
            jjmatchedKind = 45;
            return 241;
         }
         if ((active0 & 0x1800L) != 0L)
         {
            jjmatchedKind = 45;
            return 312;
         }
         return -1;
      case 1:
         if ((active0 & 0x8000L) != 0L)
         {
            jjmatchedKind = 45;
            jjmatchedPos = 1;
            return 147;
         }
         if ((active0 & 0x40f47e80L) != 0L)
         {
            jjmatchedKind = 45;
            jjmatchedPos = 1;
            return 346;
         }
         if ((active0 & 0x80000L) != 0L)
            return 346;
         return -1;
      case 2:
         if ((active0 & 0x8000L) != 0L)
         {
            jjmatchedKind = 45;
            jjmatchedPos = 2;
            return 146;
         }
         if ((active0 & 0x140000L) != 0L)
            return 346;
         if ((active0 & 0x40e07e80L) != 0L)
         {
            jjmatchedKind = 45;
            jjmatchedPos = 2;
            return 346;
         }
         return -1;
      case 3:
         if ((active0 & 0xe07e80L) != 0L)
         {
            jjmatchedKind = 45;
            jjmatchedPos = 3;
            return 346;
         }
         if ((active0 & 0x8000L) != 0L)
         {
            jjmatchedKind = 45;
            jjmatchedPos = 3;
            return 145;
         }
         if ((active0 & 0x40000000L) != 0L)
            return 346;
         return -1;
      case 4:
         if ((active0 & 0xe04e80L) != 0L)
         {
            jjmatchedKind = 45;
            jjmatchedPos = 4;
            return 346;
         }
         if ((active0 & 0x8000L) != 0L)
         {
            jjmatchedKind = 45;
            jjmatchedPos = 4;
            return 144;
         }
         if ((active0 & 0x3000L) != 0L)
            return 346;
         return -1;
      case 5:
         if ((active0 & 0xe04e80L) != 0L)
         {
            jjmatchedKind = 45;
            jjmatchedPos = 5;
            return 346;
         }
         if ((active0 & 0x8000L) != 0L)
         {
            jjmatchedKind = 45;
            jjmatchedPos = 5;
            return 143;
         }
         return -1;
      case 6:
         if ((active0 & 0xc04e80L) != 0L)
         {
            jjmatchedKind = 45;
            jjmatchedPos = 6;
            return 346;
         }
         if ((active0 & 0x8000L) != 0L)
         {
            jjmatchedKind = 45;
            jjmatchedPos = 6;
            return 138;
         }
         if ((active0 & 0x200000L) != 0L)
            return 346;
         return -1;
      case 7:
         if ((active0 & 0xc04e80L) != 0L)
         {
            jjmatchedKind = 45;
            jjmatchedPos = 7;
            return 346;
         }
         if ((active0 & 0x8000L) != 0L)
            return 142;
         return -1;
      case 8:
         if ((active0 & 0xa00L) != 0L)
         {
            if (jjmatchedPos < 7)
            {
               jjmatchedKind = 45;
               jjmatchedPos = 7;
            }
            return -1;
         }
         if ((active0 & 0x804480L) != 0L)
         {
            jjmatchedKind = 45;
            jjmatchedPos = 8;
            return 346;
         }
         if ((active0 & 0x400000L) != 0L)
            return 346;
         return -1;
      case 9:
         if ((active0 & 0xa00L) != 0L)
         {
            if (jjmatchedPos < 7)
            {
               jjmatchedKind = 45;
               jjmatchedPos = 7;
            }
            return -1;
         }
         if ((active0 & 0x80L) != 0L)
            return 346;
         if ((active0 & 0x804400L) != 0L)
         {
            jjmatchedKind = 45;
            jjmatchedPos = 9;
            return 346;
         }
         return -1;
      case 10:
         if ((active0 & 0xa00L) != 0L)
         {
            if (jjmatchedPos < 7)
            {
               jjmatchedKind = 45;
               jjmatchedPos = 7;
            }
            return -1;
         }
         if ((active0 & 0x804000L) != 0L)
         {
            jjmatchedKind = 45;
            jjmatchedPos = 10;
            return 346;
         }
         if ((active0 & 0x400L) != 0L)
            return 346;
         return -1;
      case 11:
         if ((active0 & 0xa00L) != 0L)
         {
            if (jjmatchedPos < 7)
            {
               jjmatchedKind = 45;
               jjmatchedPos = 7;
            }
            return -1;
         }
         if ((active0 & 0x800000L) != 0L)
            return 346;
         if ((active0 & 0x4000L) != 0L)
         {
            jjmatchedKind = 45;
            jjmatchedPos = 11;
            return 346;
         }
         return -1;
      case 12:
         if ((active0 & 0x4000L) != 0L)
         {
            jjmatchedKind = 45;
            jjmatchedPos = 12;
            return 346;
         }
         if ((active0 & 0xa00L) != 0L)
         {
            if (jjmatchedPos < 7)
            {
               jjmatchedKind = 45;
               jjmatchedPos = 7;
            }
            return -1;
         }
         return -1;
      case 13:
         if ((active0 & 0xa00L) != 0L)
         {
            if (jjmatchedPos < 7)
            {
               jjmatchedKind = 45;
               jjmatchedPos = 7;
            }
            return -1;
         }
         if ((active0 & 0x4000L) != 0L)
         {
            jjmatchedKind = 45;
            jjmatchedPos = 13;
            return 346;
         }
         return -1;
      case 14:
         if ((active0 & 0x4000L) != 0L)
         {
            jjmatchedKind = 45;
            jjmatchedPos = 14;
            return 346;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 9:
         return jjStopAtPos(0, 2);
      case 32:
         return jjStopAtPos(0, 1);
      case 36:
         return jjStopAtPos(0, 52);
      case 40:
         return jjStopAtPos(0, 60);
      case 41:
         return jjStopAtPos(0, 61);
      case 42:
         return jjStopAtPos(0, 57);
      case 43:
         return jjStopAtPos(0, 55);
      case 44:
         return jjStopAtPos(0, 27);
      case 45:
         jjmatchedKind = 56;
         return jjMoveStringLiteralDfa1_0(0x20000000000000L, 0x0L);
      case 46:
         return jjStartNfaWithStates_0(0, 50, 28);
      case 47:
         return jjStopAtPos(0, 58);
      case 60:
         return jjMoveStringLiteralDfa1_0(0x40000000000000L, 0x0L);
      case 61:
         jjmatchedKind = 51;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x4L);
      case 77:
         return jjMoveStringLiteralDfa1_0(0x480000L, 0x0L);
      case 83:
         return jjMoveStringLiteralDfa1_0(0x300000L, 0x0L);
      case 91:
         return jjStopAtPos(0, 64);
      case 93:
         return jjStopAtPos(0, 65);
      case 94:
         return jjStopAtPos(0, 59);
      case 98:
         return jjMoveStringLiteralDfa1_0(0x2000L, 0x0L);
      case 101:
         return jjMoveStringLiteralDfa1_0(0x40000L, 0x0L);
      case 103:
         return jjMoveStringLiteralDfa1_0(0x4000L, 0x0L);
      case 109:
         return jjMoveStringLiteralDfa1_0(0x1800L, 0x0L);
      case 111:
         return jjMoveStringLiteralDfa1_0(0x400L, 0x0L);
      case 112:
         return jjMoveStringLiteralDfa1_0(0x80L, 0x0L);
      case 114:
         return jjMoveStringLiteralDfa1_0(0x40000200L, 0x0L);
      case 115:
         return jjMoveStringLiteralDfa1_0(0x808000L, 0x0L);
      case 123:
         return jjStopAtPos(0, 62);
      case 125:
         return jjStopAtPos(0, 63);
      default :
         return jjMoveNfa_0(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0, long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, active1);
      return 1;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa2_0(active0, 0x40000000000000L, active1, 0L);
      case 62:
         if ((active0 & 0x20000000000000L) != 0L)
            return jjStopAtPos(1, 53);
         else if ((active1 & 0x4L) != 0L)
            return jjStopAtPos(1, 66);
         break;
      case 77:
         if ((active0 & 0x80000L) != 0L)
            return jjStartNfaWithStates_0(1, 19, 346);
         break;
      case 97:
         return jjMoveStringLiteralDfa2_0(active0, 0x900080L, active1, 0L);
      case 98:
         return jjMoveStringLiteralDfa2_0(active0, 0x400L, active1, 0L);
      case 101:
         return jjMoveStringLiteralDfa2_0(active0, 0x6200L, active1, 0L);
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, 0x8000L, active1, 0L);
      case 110:
         return jjMoveStringLiteralDfa2_0(active0, 0x40000L, active1, 0L);
      case 111:
         return jjMoveStringLiteralDfa2_0(active0, 0x40401800L, active1, 0L);
      case 112:
         return jjMoveStringLiteralDfa2_0(active0, 0x200000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0, active1);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(0, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, 0L);
      return 2;
   }
   switch(curChar)
   {
      case 62:
         if ((active0 & 0x40000000000000L) != 0L)
            return jjStopAtPos(2, 54);
         break;
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0x200L);
      case 100:
         if ((active0 & 0x40000L) != 0L)
            return jjStartNfaWithStates_0(2, 18, 346);
         return jjMoveStringLiteralDfa3_0(active0, 0x1000L);
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0x200000L);
      case 103:
         return jjMoveStringLiteralDfa3_0(active0, 0x2000L);
      case 108:
         return jjMoveStringLiteralDfa3_0(active0, 0x400800L);
      case 109:
         return jjMoveStringLiteralDfa3_0(active0, 0x808000L);
      case 110:
         return jjMoveStringLiteralDfa3_0(active0, 0x4000L);
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0x40000000L);
      case 114:
         return jjMoveStringLiteralDfa3_0(active0, 0x80L);
      case 115:
         return jjMoveStringLiteralDfa3_0(active0, 0x400L);
      case 116:
         if ((active0 & 0x100000L) != 0L)
            return jjStartNfaWithStates_0(2, 20, 346);
         break;
      default :
         break;
   }
   return jjStartNfa_0(1, active0, 0L);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(1, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, 0L);
      return 3;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa4_0(active0, 0x80L);
      case 99:
         return jjMoveStringLiteralDfa4_0(active0, 0x200200L);
      case 101:
         return jjMoveStringLiteralDfa4_0(active0, 0x405c00L);
      case 105:
         return jjMoveStringLiteralDfa4_0(active0, 0x2000L);
      case 112:
         return jjMoveStringLiteralDfa4_0(active0, 0x800000L);
      case 116:
         if ((active0 & 0x40000000L) != 0L)
            return jjStartNfaWithStates_0(3, 30, 346);
         break;
      case 117:
         return jjMoveStringLiteralDfa4_0(active0, 0x8000L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0, 0L);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(2, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0, 0L);
      return 4;
   }
   switch(curChar)
   {
      case 99:
         return jjMoveStringLiteralDfa5_0(active0, 0x400800L);
      case 105:
         return jjMoveStringLiteralDfa5_0(active0, 0x200000L);
      case 108:
         if ((active0 & 0x1000L) != 0L)
            return jjStartNfaWithStates_0(4, 12, 346);
         return jjMoveStringLiteralDfa5_0(active0, 0x808000L);
      case 109:
         return jjMoveStringLiteralDfa5_0(active0, 0x80L);
      case 110:
         if ((active0 & 0x2000L) != 0L)
            return jjStartNfaWithStates_0(4, 13, 346);
         break;
      case 114:
         return jjMoveStringLiteralDfa5_0(active0, 0x4400L);
      case 116:
         return jjMoveStringLiteralDfa5_0(active0, 0x200L);
      default :
         break;
   }
   return jjStartNfa_0(3, active0, 0L);
}
private int jjMoveStringLiteralDfa5_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(3, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0, 0L);
      return 5;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa6_0(active0, 0xc000L);
      case 101:
         return jjMoveStringLiteralDfa6_0(active0, 0xa00080L);
      case 105:
         return jjMoveStringLiteralDfa6_0(active0, 0x200L);
      case 117:
         return jjMoveStringLiteralDfa6_0(active0, 0x400800L);
      case 118:
         return jjMoveStringLiteralDfa6_0(active0, 0x400L);
      default :
         break;
   }
   return jjStartNfa_0(4, active0, 0L);
}
private int jjMoveStringLiteralDfa6_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(4, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, active0, 0L);
      return 6;
   }
   switch(curChar)
   {
      case 95:
         return jjMoveStringLiteralDfa7_0(active0, 0x800000L);
      case 97:
         return jjMoveStringLiteralDfa7_0(active0, 0x400L);
      case 108:
         return jjMoveStringLiteralDfa7_0(active0, 0x400800L);
      case 111:
         return jjMoveStringLiteralDfa7_0(active0, 0x200L);
      case 115:
         if ((active0 & 0x200000L) != 0L)
            return jjStartNfaWithStates_0(6, 21, 346);
         break;
      case 116:
         return jjMoveStringLiteralDfa7_0(active0, 0xc080L);
      default :
         break;
   }
   return jjStartNfa_0(5, active0, 0L);
}
private int jjMoveStringLiteralDfa7_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(5, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, active0, 0L);
      return 7;
   }
   switch(curChar)
   {
      case 98:
         return jjMoveStringLiteralDfa8_0(active0, 0x400L);
      case 101:
         if ((active0 & 0x8000L) != 0L)
            return jjStartNfaWithStates_0(7, 15, 142);
         return jjMoveStringLiteralDfa8_0(active0, 0x404880L);
      case 110:
         return jjMoveStringLiteralDfa8_0(active0, 0x200L);
      case 116:
         return jjMoveStringLiteralDfa8_0(active0, 0x800000L);
      default :
         break;
   }
   return jjStartNfa_0(6, active0, 0L);
}
private int jjMoveStringLiteralDfa8_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(6, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(7, active0, 0L);
      return 8;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa9_0(active0, 0xa00L);
      case 95:
         return jjMoveStringLiteralDfa9_0(active0, 0x4000L);
      case 105:
         return jjMoveStringLiteralDfa9_0(active0, 0x800000L);
      case 108:
         return jjMoveStringLiteralDfa9_0(active0, 0x400L);
      case 114:
         return jjMoveStringLiteralDfa9_0(active0, 0x80L);
      case 115:
         if ((active0 & 0x400000L) != 0L)
            return jjStartNfaWithStates_0(8, 22, 346);
         break;
      default :
         break;
   }
   return jjStartNfa_0(7, active0, 0L);
}
private int jjMoveStringLiteralDfa9_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(7, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(8, active0, 0L);
      return 9;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa10_0(active0, 0x400L);
      case 109:
         return jjMoveStringLiteralDfa10_0(active0, 0x800000L);
      case 110:
         return jjMoveStringLiteralDfa10_0(active0, 0x4000L);
      case 114:
         return jjMoveStringLiteralDfa10_0(active0, 0x200L);
      case 115:
         if ((active0 & 0x80L) != 0L)
            return jjStartNfaWithStates_0(9, 7, 346);
         break;
      case 116:
         return jjMoveStringLiteralDfa10_0(active0, 0x800L);
      default :
         break;
   }
   return jjStartNfa_0(8, active0, 0L);
}
private int jjMoveStringLiteralDfa10_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(8, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(9, active0, 0L);
      return 10;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa11_0(active0, 0x804000L);
      case 115:
         if ((active0 & 0x400L) != 0L)
            return jjStartNfaWithStates_0(10, 10, 346);
         break;
      case 117:
         return jjMoveStringLiteralDfa11_0(active0, 0x200L);
      case 121:
         return jjMoveStringLiteralDfa11_0(active0, 0x800L);
      default :
         break;
   }
   return jjStartNfa_0(9, active0, 0L);
}
private int jjMoveStringLiteralDfa11_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(9, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(10, active0, 0L);
      return 11;
   }
   switch(curChar)
   {
      case 108:
         return jjMoveStringLiteralDfa12_0(active0, 0x200L);
      case 112:
         return jjMoveStringLiteralDfa12_0(active0, 0x800L);
      case 115:
         if ((active0 & 0x800000L) != 0L)
            return jjStartNfaWithStates_0(11, 23, 346);
         break;
      case 116:
         return jjMoveStringLiteralDfa12_0(active0, 0x4000L);
      default :
         break;
   }
   return jjStartNfa_0(10, active0, 0L);
}
private int jjMoveStringLiteralDfa12_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(10, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(11, active0, 0L);
      return 12;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa13_0(active0, 0xa00L);
      case 119:
         return jjMoveStringLiteralDfa13_0(active0, 0x4000L);
      default :
         break;
   }
   return jjStartNfa_0(11, active0, 0L);
}
private int jjMoveStringLiteralDfa13_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(11, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(12, active0, 0L);
      return 13;
   }
   switch(curChar)
   {
      case 111:
         return jjMoveStringLiteralDfa14_0(active0, 0x4000L);
      case 115:
         if ((active0 & 0x200L) != 0L)
            return jjStopAtPos(13, 9);
         else if ((active0 & 0x800L) != 0L)
            return jjStopAtPos(13, 11);
         break;
      default :
         break;
   }
   return jjStartNfa_0(12, active0, 0L);
}
private int jjMoveStringLiteralDfa14_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(12, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(13, active0, 0L);
      return 14;
   }
   switch(curChar)
   {
      case 114:
         return jjMoveStringLiteralDfa15_0(active0, 0x4000L);
      default :
         break;
   }
   return jjStartNfa_0(13, active0, 0L);
}
private int jjMoveStringLiteralDfa15_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(13, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(14, active0, 0L);
      return 15;
   }
   switch(curChar)
   {
      case 107:
         if ((active0 & 0x4000L) != 0L)
            return jjStartNfaWithStates_0(15, 14, 346);
         break;
      default :
         break;
   }
   return jjStartNfa_0(14, active0, 0L);
}
private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 346;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 145:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 45)
                        kind = 45;
                     jjCheckNAdd(305);
                  }
                  else if (curChar == 58)
                  {
                     if (kind > 44)
                        kind = 44;
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(303, 304);
                  break;
               case 132:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 45)
                        kind = 45;
                     jjCheckNAdd(305);
                  }
                  else if (curChar == 58)
                  {
                     if (kind > 44)
                        kind = 44;
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(303, 304);
                  break;
               case 260:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 45)
                        kind = 45;
                     jjCheckNAdd(305);
                  }
                  else if (curChar == 58)
                  {
                     if (kind > 44)
                        kind = 44;
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(303, 304);
                  break;
               case 144:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 45)
                        kind = 45;
                     jjCheckNAdd(305);
                  }
                  else if (curChar == 58)
                  {
                     if (kind > 44)
                        kind = 44;
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(303, 304);
                  break;
               case 138:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 45)
                        kind = 45;
                     jjCheckNAdd(305);
                  }
                  else if (curChar == 58)
                  {
                     if (kind > 44)
                        kind = 44;
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(303, 304);
                  break;
               case 312:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 45)
                        kind = 45;
                     jjCheckNAdd(305);
                  }
                  else if (curChar == 58)
                  {
                     if (kind > 44)
                        kind = 44;
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(303, 304);
                  break;
               case 241:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 45)
                        kind = 45;
                     jjCheckNAdd(305);
                  }
                  else if (curChar == 58)
                  {
                     if (kind > 44)
                        kind = 44;
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(303, 304);
                  break;
               case 0:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 32)
                        kind = 32;
                     jjCheckNAddStates(0, 4);
                  }
                  else if ((0x2400L & l) != 0L)
                  {
                     if (kind > 5)
                        kind = 5;
                  }
                  else if (curChar == 33)
                     jjCheckNAddTwoStates(40, 41);
                  else if (curChar == 37)
                     jjCheckNAdd(38);
                  else if (curChar == 34)
                     jjCheckNAddStates(5, 7);
                  else if (curChar == 46)
                     jjCheckNAdd(28);
                  else if (curChar == 35)
                     jjstateSet[jjnewStateCnt++] = 10;
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 8;
                  else if (curChar == 35)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 143:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 45)
                        kind = 45;
                     jjCheckNAdd(305);
                  }
                  else if (curChar == 58)
                  {
                     if (kind > 44)
                        kind = 44;
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(303, 304);
                  break;
               case 346:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 45)
                        kind = 45;
                     jjCheckNAdd(305);
                  }
                  else if (curChar == 58)
                  {
                     if (kind > 44)
                        kind = 44;
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(303, 304);
                  break;
               case 146:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 45)
                        kind = 45;
                     jjCheckNAdd(305);
                  }
                  else if (curChar == 58)
                  {
                     if (kind > 44)
                        kind = 44;
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(303, 304);
                  break;
               case 253:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 45)
                        kind = 45;
                     jjCheckNAdd(305);
                  }
                  else if (curChar == 58)
                  {
                     if (kind > 44)
                        kind = 44;
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(303, 304);
                  break;
               case 20:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 45)
                        kind = 45;
                     jjCheckNAdd(305);
                  }
                  else if (curChar == 58)
                  {
                     if (kind > 44)
                        kind = 44;
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(303, 304);
                  break;
               case 142:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 45)
                        kind = 45;
                     jjCheckNAdd(305);
                  }
                  else if (curChar == 58)
                  {
                     if (kind > 44)
                        kind = 44;
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(303, 304);
                  break;
               case 147:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 45)
                        kind = 45;
                     jjCheckNAdd(305);
                  }
                  else if (curChar == 58)
                  {
                     if (kind > 44)
                        kind = 44;
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(303, 304);
                  break;
               case 1:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 3)
                     kind = 3;
                  jjCheckNAdd(2);
                  break;
               case 2:
                  if ((0xffffffffffffdbffL & l) == 0L)
                     break;
                  if (kind > 3)
                     kind = 3;
                  jjCheckNAdd(2);
                  break;
               case 4:
                  if ((0x2400L & l) != 0L && kind > 4)
                     kind = 4;
                  break;
               case 5:
                  if (curChar == 10 && kind > 4)
                     kind = 4;
                  break;
               case 6:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 7:
                  if ((0x2400L & l) != 0L && kind > 5)
                     kind = 5;
                  break;
               case 8:
                  if (curChar == 10 && kind > 5)
                     kind = 5;
                  break;
               case 9:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 10:
                  if (curChar != 32)
                     break;
                  if (kind > 6)
                     kind = 6;
                  jjCheckNAdd(11);
                  break;
               case 11:
                  if ((0xffffffffffffdbffL & l) == 0L)
                     break;
                  if (kind > 6)
                     kind = 6;
                  jjCheckNAdd(11);
                  break;
               case 12:
                  if (curChar == 35)
                     jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 27:
                  if (curChar == 46)
                     jjCheckNAdd(28);
                  break;
               case 28:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAddTwoStates(28, 29);
                  break;
               case 30:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(31);
                  break;
               case 31:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAdd(31);
                  break;
               case 32:
                  if (curChar == 34)
                     jjCheckNAddStates(5, 7);
                  break;
               case 33:
                  if ((0xfffffffbffffdbffL & l) != 0L)
                     jjCheckNAddStates(5, 7);
                  break;
               case 35:
                  if ((0x8400000000L & l) != 0L)
                     jjCheckNAddStates(5, 7);
                  break;
               case 36:
                  if (curChar == 34 && kind > 36)
                     kind = 36;
                  break;
               case 37:
                  if (curChar == 37)
                     jjCheckNAdd(38);
                  break;
               case 38:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 46)
                     kind = 46;
                  jjCheckNAddStates(8, 10);
                  break;
               case 39:
                  if (curChar == 33)
                     jjCheckNAddTwoStates(40, 41);
                  break;
               case 40:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 46)
                     kind = 46;
                  jjCheckNAddStates(11, 13);
                  break;
               case 41:
                  if ((0x8000080000000000L & l) == 0L)
                     break;
                  if (kind > 46)
                     kind = 46;
                  jjCheckNAddTwoStates(37, 39);
                  break;
               case 42:
                  if (curChar == 37)
                     jjCheckNAddTwoStates(38, 43);
                  break;
               case 43:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 46)
                     kind = 46;
                  jjCheckNAddStates(14, 16);
                  break;
               case 79:
                  if (curChar == 50 && kind > 29)
                     kind = 29;
                  break;
               case 82:
                  if (curChar == 48 && kind > 29)
                     kind = 29;
                  break;
               case 83:
                  if (curChar == 49)
                     jjstateSet[jjnewStateCnt++] = 82;
                  break;
               case 129:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 128;
                  break;
               case 290:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 32)
                     kind = 32;
                  jjCheckNAddStates(0, 4);
                  break;
               case 291:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 32)
                     kind = 32;
                  jjCheckNAdd(291);
                  break;
               case 292:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(292, 293);
                  break;
               case 293:
                  if (curChar != 46)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAddTwoStates(294, 295);
                  break;
               case 294:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAddTwoStates(294, 295);
                  break;
               case 296:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(297);
                  break;
               case 297:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAdd(297);
                  break;
               case 298:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(298, 299);
                  break;
               case 300:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(301);
                  break;
               case 301:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAdd(301);
                  break;
               case 303:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(303, 304);
                  break;
               case 304:
                  if (curChar == 58 && kind > 44)
                     kind = 44;
                  break;
               case 305:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 45)
                     kind = 45;
                  jjCheckNAdd(305);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 145:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 45)
                        kind = 45;
                     jjCheckNAdd(305);
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(303, 304);
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 155;
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 144;
                  break;
               case 132:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 45)
                        kind = 45;
                     jjCheckNAdd(305);
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(303, 304);
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 188;
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 186;
                  else if (curChar == 113)
                     jjstateSet[jjnewStateCnt++] = 181;
                  else if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 178;
                  else if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 174;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 131;
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 184;
                  else if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 163;
                  else if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 136;
                  if (curChar == 105)
                     jjCheckNAdd(78);
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 158;
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 147;
                  break;
               case 260:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 45)
                        kind = 45;
                     jjCheckNAdd(305);
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(303, 304);
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 288;
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 273;
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 259;
                  break;
               case 144:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 45)
                        kind = 45;
                     jjCheckNAdd(305);
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(303, 304);
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 154;
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 143;
                  break;
               case 138:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 45)
                        kind = 45;
                     jjCheckNAdd(305);
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(303, 304);
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 153;
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 142;
                  break;
               case 312:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 45)
                        kind = 45;
                     jjCheckNAdd(305);
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(303, 304);
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 330;
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 328;
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 326;
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 317;
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 311;
                  break;
               case 241:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 45)
                        kind = 45;
                     jjCheckNAdd(305);
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(303, 304);
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 242;
                  else if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 240;
                  break;
               case 0:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 45)
                        kind = 45;
                     jjCheckNAddStates(17, 19);
                  }
                  else if ((0x4000000000000001L & l) != 0L)
                     jjCheckNAdd(38);
                  else if (curChar == 92)
                     jjAddStates(20, 21);
                  if (curChar == 116)
                     jjAddStates(22, 25);
                  else if (curChar == 109)
                     jjAddStates(26, 30);
                  else if (curChar == 101)
                     jjAddStates(31, 33);
                  else if (curChar == 112)
                     jjCheckNAddStates(34, 36);
                  else if (curChar == 114)
                     jjAddStates(37, 38);
                  else if (curChar == 97)
                     jjAddStates(39, 53);
                  else if (curChar == 115)
                     jjAddStates(54, 65);
                  else if (curChar == 110)
                     jjAddStates(66, 68);
                  else if (curChar == 95)
                     jjAddStates(69, 70);
                  else if (curChar == 99)
                     jjAddStates(71, 72);
                  else if (curChar == 108)
                     jjCheckNAddStates(73, 76);
                  else if (curChar == 105)
                     jjAddStates(77, 78);
                  else if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 25;
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 143:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 45)
                        kind = 45;
                     jjCheckNAdd(305);
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(303, 304);
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 149;
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 138;
                  break;
               case 346:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 45)
                        kind = 45;
                     jjCheckNAdd(305);
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(303, 304);
                  break;
               case 146:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 45)
                        kind = 45;
                     jjCheckNAdd(305);
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(303, 304);
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 156;
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 145;
                  break;
               case 253:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 45)
                        kind = 45;
                     jjCheckNAdd(305);
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(303, 304);
                  if (curChar == 105)
                  {
                     if (kind > 28)
                        kind = 28;
                  }
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 256;
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 252;
                  break;
               case 20:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 45)
                        kind = 45;
                     jjCheckNAdd(305);
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(303, 304);
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 142:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 45)
                        kind = 45;
                     jjCheckNAdd(305);
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(303, 304);
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 152;
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 141;
                  break;
               case 147:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 45)
                        kind = 45;
                     jjCheckNAdd(305);
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(303, 304);
                  if (curChar == 103)
                     jjCheckNAdd(78);
                  else if (curChar == 110)
                     jjCheckNAdd(89);
                  else if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 157;
                  if (curChar == 110)
                  {
                     if (kind > 29)
                        kind = 29;
                  }
                  else if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 146;
                  break;
               case 1:
               case 2:
                  if (kind > 3)
                     kind = 3;
                  jjCheckNAdd(2);
                  break;
               case 3:
                  if (curChar == 92)
                     jjAddStates(20, 21);
                  break;
               case 11:
                  if (kind > 6)
                     kind = 6;
                  jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 13:
                  if (curChar == 101 && kind > 24)
                     kind = 24;
                  break;
               case 14:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 15:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 16:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 17:
                  if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 18:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 19:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 21:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 22:
                  if (curChar == 114 && kind > 29)
                     kind = 29;
                  break;
               case 23:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 24:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 25:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 26:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 29:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(79, 80);
                  break;
               case 33:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAddStates(5, 7);
                  break;
               case 34:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 35:
                  if ((0x14404410000000L & l) != 0L)
                     jjCheckNAddStates(5, 7);
                  break;
               case 37:
                  if ((0x4000000000000001L & l) != 0L)
                     jjCheckNAdd(38);
                  break;
               case 38:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 46)
                     kind = 46;
                  jjCheckNAddStates(8, 10);
                  break;
               case 40:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 46)
                     kind = 46;
                  jjCheckNAddStates(11, 13);
                  break;
               case 42:
                  if ((0x4000000000000001L & l) != 0L)
                     jjCheckNAddTwoStates(38, 43);
                  break;
               case 43:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 46)
                     kind = 46;
                  jjCheckNAddStates(14, 16);
                  break;
               case 44:
                  if (curChar == 105)
                     jjAddStates(77, 78);
                  break;
               case 45:
                  if (curChar == 115 && kind > 37)
                     kind = 37;
                  break;
               case 46:
               case 60:
               case 261:
               case 275:
                  if (curChar == 116)
                     jjCheckNAdd(45);
                  break;
               case 47:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 48:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 49:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 50:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 51:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 52:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 53:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 52;
                  break;
               case 54:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 55:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 56:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 57:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 58:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 59:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 58;
                  break;
               case 61:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 60;
                  break;
               case 62:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 63:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 64:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 65:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 66:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 67:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 68:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 67;
                  break;
               case 69:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 68;
                  break;
               case 70:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 69;
                  break;
               case 71:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 70;
                  break;
               case 72:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 71;
                  break;
               case 73:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 72;
                  break;
               case 74:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 73;
                  break;
               case 75:
                  if (curChar == 108)
                     jjCheckNAddStates(73, 76);
                  break;
               case 76:
                  if (curChar == 103 && kind > 29)
                     kind = 29;
                  break;
               case 77:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 76;
                  break;
               case 78:
                  if (curChar == 110 && kind > 29)
                     kind = 29;
                  break;
               case 80:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 79;
                  break;
               case 81:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 80;
                  break;
               case 84:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 83;
                  break;
               case 85:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 84;
                  break;
               case 86:
                  if (curChar == 99)
                     jjAddStates(71, 72);
                  break;
               case 87:
                  if (curChar == 115 && kind > 29)
                     kind = 29;
                  break;
               case 88:
               case 201:
               case 203:
                  if (curChar == 111)
                     jjCheckNAdd(87);
                  break;
               case 89:
                  if (curChar == 104 && kind > 29)
                     kind = 29;
                  break;
               case 90:
               case 221:
               case 224:
                  if (curChar == 115)
                     jjCheckNAdd(89);
                  break;
               case 91:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 90;
                  break;
               case 92:
                  if (curChar == 95)
                     jjAddStates(69, 70);
                  break;
               case 93:
                  if (curChar == 105 && kind > 28)
                     kind = 28;
                  break;
               case 94:
                  if (curChar == 112)
                     jjCheckNAdd(93);
                  break;
               case 95:
                  if (curChar == 101 && kind > 28)
                     kind = 28;
                  break;
               case 96:
                  if (curChar == 110)
                     jjAddStates(66, 68);
                  break;
               case 97:
                  if (curChar == 115 && kind > 26)
                     kind = 26;
                  break;
               case 98:
               case 103:
                  if (curChar == 112)
                     jjCheckNAdd(97);
                  break;
               case 99:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 98;
                  break;
               case 100:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 99;
                  break;
               case 101:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 100;
                  break;
               case 102:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 101;
                  break;
               case 104:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 103;
                  break;
               case 105:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 104;
                  break;
               case 106:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 105;
                  break;
               case 107:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 106;
                  break;
               case 108:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 107;
                  break;
               case 109:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 108;
                  break;
               case 110:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 109;
                  break;
               case 111:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 112:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 111;
                  break;
               case 113:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 114:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 113;
                  break;
               case 115:
                  if (curChar == 101 && kind > 26)
                     kind = 26;
                  break;
               case 116:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 117:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 118:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 117;
                  break;
               case 119:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 118;
                  break;
               case 120:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 119;
                  break;
               case 121:
                  if (curChar == 115)
                     jjAddStates(54, 65);
                  break;
               case 122:
                  if (curChar == 115 && kind > 8)
                     kind = 8;
                  break;
               case 123:
               case 133:
                  if (curChar == 101)
                     jjCheckNAdd(122);
                  break;
               case 124:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 123;
                  break;
               case 125:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 124;
                  break;
               case 126:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 125;
                  break;
               case 127:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 126;
                  break;
               case 128:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 127;
                  break;
               case 130:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 129;
                  break;
               case 131:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 130;
                  break;
               case 134:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               case 135:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 134;
                  break;
               case 136:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 135;
                  break;
               case 137:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 136;
                  break;
               case 139:
                  if (curChar == 101 && kind > 16)
                     kind = 16;
                  break;
               case 140:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 139;
                  break;
               case 141:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 140;
                  break;
               case 148:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 147;
                  break;
               case 149:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 153;
                  break;
               case 150:
                  if (curChar == 97 && kind > 17)
                     kind = 17;
                  break;
               case 151:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 150;
                  break;
               case 152:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 151;
                  break;
               case 153:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 152;
                  break;
               case 154:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 149;
                  break;
               case 155:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 154;
                  break;
               case 156:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 155;
                  break;
               case 157:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 156;
                  break;
               case 158:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 157;
                  break;
               case 159:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 158;
                  break;
               case 160:
                  if (curChar == 120 && kind > 24)
                     kind = 24;
                  break;
               case 161:
               case 254:
                  if (curChar == 105)
                     jjCheckNAdd(160);
                  break;
               case 162:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 161;
                  break;
               case 163:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 162;
                  break;
               case 164:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 163;
                  break;
               case 165:
                  if (curChar == 101 && kind > 25)
                     kind = 25;
                  break;
               case 166:
                  if (curChar == 116)
                     jjCheckNAdd(165);
                  break;
               case 167:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 166;
                  break;
               case 168:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 167;
                  break;
               case 169:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 168;
                  break;
               case 170:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 169;
                  break;
               case 171:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 170;
                  break;
               case 172:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 171;
                  break;
               case 173:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 172;
                  break;
               case 174:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 173;
                  break;
               case 175:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 174;
                  break;
               case 176:
                  if (curChar == 115)
                     jjCheckNAdd(165);
                  break;
               case 177:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 176;
                  break;
               case 178:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 177;
                  break;
               case 179:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 178;
                  break;
               case 180:
                  if (curChar == 116 && kind > 29)
                     kind = 29;
                  break;
               case 181:
                  if (curChar == 114)
                     jjCheckNAdd(180);
                  break;
               case 182:
                  if (curChar == 113)
                     jjstateSet[jjnewStateCnt++] = 181;
                  break;
               case 183:
               case 195:
               case 197:
                  if (curChar == 105)
                     jjCheckNAdd(78);
                  break;
               case 184:
               case 213:
               case 216:
               case 229:
               case 232:
               case 344:
                  if (curChar == 110)
                     jjCheckNAdd(89);
                  break;
               case 185:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 184;
                  break;
               case 186:
                  if (curChar == 103)
                     jjCheckNAdd(78);
                  break;
               case 187:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 186;
                  break;
               case 188:
                  if (curChar == 109 && kind > 31)
                     kind = 31;
                  break;
               case 189:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 188;
                  break;
               case 190:
                  if (curChar == 97)
                     jjAddStates(39, 53);
                  break;
               case 191:
                  if (curChar == 108 && kind > 25)
                     kind = 25;
                  break;
               case 192:
               case 240:
                  if (curChar == 111)
                     jjCheckNAdd(191);
                  break;
               case 193:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 192;
                  break;
               case 194:
                  if (curChar == 98)
                     jjCheckNAdd(87);
                  break;
               case 196:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 195;
                  break;
               case 198:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 197;
                  break;
               case 199:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 198;
                  break;
               case 200:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 199;
                  break;
               case 202:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 201;
                  break;
               case 204:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 203;
                  break;
               case 205:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 204;
                  break;
               case 206:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 205;
                  break;
               case 207:
               case 209:
               case 343:
                  if (curChar == 97)
                     jjCheckNAdd(78);
                  break;
               case 208:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 207;
                  break;
               case 210:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 209;
                  break;
               case 211:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 210;
                  break;
               case 212:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 211;
                  break;
               case 214:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 213;
                  break;
               case 215:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 214;
                  break;
               case 217:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 216;
                  break;
               case 218:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 217;
                  break;
               case 219:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 218;
                  break;
               case 220:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 219;
                  break;
               case 222:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 221;
                  break;
               case 223:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 222;
                  break;
               case 225:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 224;
                  break;
               case 226:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 225;
                  break;
               case 227:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 226;
                  break;
               case 228:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 227;
                  break;
               case 230:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 229;
                  break;
               case 231:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 230;
                  break;
               case 233:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 232;
                  break;
               case 234:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 233;
                  break;
               case 235:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 234;
                  break;
               case 236:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 235;
                  break;
               case 237:
                  if (curChar == 103 && kind > 31)
                     kind = 31;
                  break;
               case 238:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 237;
                  break;
               case 239:
                  if (curChar == 114)
                     jjAddStates(37, 38);
                  break;
               case 242:
                  if (curChar == 110)
                     jjCheckNAdd(180);
                  break;
               case 243:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 242;
                  break;
               case 244:
                  if (curChar == 112)
                     jjCheckNAddStates(34, 36);
                  break;
               case 245:
                  if (curChar == 114 && kind > 24)
                     kind = 24;
                  break;
               case 246:
               case 313:
                  if (curChar == 101)
                     jjCheckNAdd(245);
                  break;
               case 247:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 246;
                  break;
               case 248:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 247;
                  break;
               case 249:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 248;
                  break;
               case 250:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 249;
                  break;
               case 251:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 250;
                  break;
               case 252:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 251;
                  break;
               case 255:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 254;
                  break;
               case 256:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 255;
                  break;
               case 257:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 256;
                  break;
               case 258:
                  if (curChar == 101)
                     jjAddStates(31, 33);
                  break;
               case 259:
                  if (curChar == 112 && kind > 29)
                     kind = 29;
                  break;
               case 262:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 261;
                  break;
               case 263:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 262;
                  break;
               case 264:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 263;
                  break;
               case 265:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 264;
                  break;
               case 266:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 265;
                  break;
               case 267:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 266;
                  break;
               case 268:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 267;
                  break;
               case 269:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 268;
                  break;
               case 270:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 269;
                  break;
               case 271:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 270;
                  break;
               case 272:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 271;
                  break;
               case 273:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 272;
                  break;
               case 274:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 273;
                  break;
               case 276:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 275;
                  break;
               case 277:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  break;
               case 278:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 277;
                  break;
               case 279:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 278;
                  break;
               case 280:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 279;
                  break;
               case 281:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 280;
                  break;
               case 282:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 281;
                  break;
               case 283:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 282;
                  break;
               case 284:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 283;
                  break;
               case 285:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 284;
                  break;
               case 286:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 285;
                  break;
               case 287:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 286;
                  break;
               case 288:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 287;
                  break;
               case 289:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 288;
                  break;
               case 295:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(81, 82);
                  break;
               case 299:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(83, 84);
                  break;
               case 302:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 45)
                     kind = 45;
                  jjCheckNAddStates(17, 19);
                  break;
               case 303:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(303, 304);
                  break;
               case 305:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 45)
                     kind = 45;
                  jjCheckNAdd(305);
                  break;
               case 306:
                  if (curChar == 109)
                     jjAddStates(26, 30);
                  break;
               case 307:
                  if (curChar == 103 && kind > 24)
                     kind = 24;
                  break;
               case 308:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 307;
                  break;
               case 309:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 308;
                  break;
               case 310:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 309;
                  break;
               case 311:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 310;
                  break;
               case 314:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 313;
                  break;
               case 315:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 314;
                  break;
               case 316:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 315;
                  break;
               case 317:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 316;
                  break;
               case 318:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 317;
                  break;
               case 319:
                  if (curChar == 104 && kind > 24)
                     kind = 24;
                  break;
               case 320:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 319;
                  break;
               case 321:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 320;
                  break;
               case 322:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 321;
                  break;
               case 323:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 322;
                  break;
               case 324:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 323;
                  break;
               case 325:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 324;
                  break;
               case 326:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 325;
                  break;
               case 327:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 326;
                  break;
               case 328:
                  if (curChar == 110 && kind > 31)
                     kind = 31;
                  break;
               case 329:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 328;
                  break;
               case 330:
                  if (curChar == 120 && kind > 31)
                     kind = 31;
                  break;
               case 331:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 330;
                  break;
               case 332:
                  if (curChar == 116)
                     jjAddStates(22, 25);
                  break;
               case 333:
                  if (curChar == 100 && kind > 26)
                     kind = 26;
                  break;
               case 334:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 333;
                  break;
               case 335:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 334;
                  break;
               case 336:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 335;
                  break;
               case 337:
                  if (curChar == 116 && kind > 26)
                     kind = 26;
                  break;
               case 338:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 337;
                  break;
               case 339:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 338;
                  break;
               case 340:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 339;
                  break;
               case 341:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 340;
                  break;
               case 342:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 341;
                  break;
               case 345:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 344;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
               case 2:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 3)
                     kind = 3;
                  jjCheckNAdd(2);
                  break;
               case 11:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 6)
                     kind = 6;
                  jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 33:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(5, 7);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 346 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   291, 292, 293, 298, 299, 33, 34, 36, 38, 39, 42, 37, 39, 40, 43, 39,
   42, 303, 304, 305, 4, 6, 336, 342, 343, 345, 312, 318, 327, 329, 331, 260,
   274, 289, 253, 257, 93, 241, 243, 193, 194, 196, 200, 202, 206, 208, 212, 215,
   220, 223, 228, 231, 236, 238, 132, 137, 148, 159, 164, 175, 179, 182, 183, 185,
   187, 189, 102, 114, 120, 94, 95, 88, 91, 77, 78, 81, 85, 59, 74, 30,
   31, 296, 297, 300, 301,
};

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null,
"\160\141\162\141\155\145\164\145\162\163", null, "\162\145\141\143\164\151\157\156\40\162\165\154\145\163",
"\157\142\163\145\162\166\141\142\154\145\163", "\155\157\154\145\143\165\154\145\40\164\171\160\145\163",
"\155\157\144\145\154", "\142\145\147\151\156",
"\147\145\156\145\162\141\164\145\137\156\145\164\167\157\162\153", "\163\151\155\165\154\141\164\145", null, null, "\145\156\144", "\115\115",
"\123\141\164", "\123\160\145\143\151\145\163", "\115\157\154\145\143\165\154\145\163",
"\163\141\155\160\154\145\137\164\151\155\145\163", null, null, null, "\54", null, null, "\162\157\157\164", null, null, null,
null, null, null, null, null, null, null, null, null, null, null, null, null, null,
null, null, "\56", "\75", "\44", "\55\76", "\74\55\76", "\53", "\55", "\52", "\57",
"\136", "\50", "\51", "\173", "\175", "\133", "\135", "\75\76", };

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
};
static final long[] jjtoToken = {
   0xfffc7035ffffffe1L, 0x7L,
};
static final long[] jjtoSkip = {
   0x1eL, 0x0L,
};
static final long[] jjtoSpecial = {
   0x1eL, 0x0L,
};
    protected JavaccCharStream input_stream;
private final int[] jjrounds = new int[346];
private final int[] jjstateSet = new int[692];
protected char curChar;
/** Constructor. */
    public BionetgenParserTokenManager(JavaccCharStream stream)
    {
   if (SimpleCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}

/** Constructor. */
    public BionetgenParserTokenManager(JavaccCharStream stream, int lexState)
    {
   this(stream);
   SwitchTo(lexState);
}

/** Reinitialise parser. */
    public void ReInit(JavaccCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 346; i-- > 0;)
      jjrounds[i] = 0x80000000;
}

/** Reinitialise parser. */
    public void ReInit(JavaccCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}

/** Switch to specified lex state. */
public void SwitchTo(int lexState)
{
   if (lexState >= 1 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken()
{
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      matchedToken.specialToken = specialToken;
      return matchedToken;
   }

   jjmatchedKind = 0x7fffffff;
   jjmatchedPos = 0;
   curPos = jjMoveStringLiteralDfa0_0();
   if (jjmatchedKind != 0x7fffffff)
   {
      if (jjmatchedPos + 1 < curPos)
         input_stream.backup(curPos - jjmatchedPos - 1);
      if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
      {
         matchedToken = jjFillToken();
         matchedToken.specialToken = specialToken;
         return matchedToken;
      }
      else
      {
         if ((jjtoSpecial[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
         {
            matchedToken = jjFillToken();
            if (specialToken == null)
               specialToken = matchedToken;
            else
            {
               matchedToken.specialToken = specialToken;
               specialToken = (specialToken.next = matchedToken);
            }
         }
         continue EOFLoop;
      }
   }
   int error_line = input_stream.getEndLine();
   int error_column = input_stream.getEndColumn();
   String error_after = null;
   boolean EOFSeen = false;
   try { input_stream.readChar(); input_stream.backup(1); }
   catch (java.io.IOException e1) {
      EOFSeen = true;
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
      if (curChar == '\n' || curChar == '\r') {
         error_line++;
         error_column = 0;
      }
      else
         error_column++;
   }
   if (!EOFSeen) {
      input_stream.backup(1);
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

}

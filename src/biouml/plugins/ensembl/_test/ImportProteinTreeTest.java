package biouml.plugins.ensembl._test;

import java.io.File;
import java.sql.Connection;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import biouml.plugins.ensembl.homology.ImportProteinTree;
import biouml.plugins.ensembl.homology.TreeNode;
import ru.biosoft.access.sql.Connectors;
import junit.framework.Test;
import junit.framework.TestCase;
import junit.framework.TestSuite;

/**
 * @author lan
 *
 */
public class ImportProteinTreeTest extends TestCase
{
    public ImportProteinTreeTest(String name)
    {
        super(name);
    }

    public static Test suite()
    {
        TestSuite suite = new TestSuite(ImportProteinTreeTest.class.getName());

        suite.addTest(new ImportProteinTreeTest("testParseTree"));
        suite.addTest(new ImportProteinTreeTest("testNonBinaryTree"));
        //suite.addTest(new ImportProteinTreeTest("testImportProteinTree"));

        return suite;
    }

    public void testImportProteinTree() throws Exception
    {
        File file = new File("C:\\Downloads\\Compara.84.protein.nh.emf");
        Connection connection = Connectors.getConnection( "ensembl_homology" );
        ImportProteinTree.doImport(file, connection);
    }

    public void testNonBinaryTree() throws Exception
    {
        String tree = "((((((((((((((((ENSECAP00000006838:0.0228,ENSEEUP00000009647:0.0688):0.0038,((ENSTTRP00000002327:0.0187,"
                + "ENSBTAP00000043848:0.0189):0.0033,ENSVPAP00000008871:0.0128):0.0059):0.0005,(ENSMLUP00000010187:0.0445,ENSPVAP"
                + "00000003307:0.0456):0.0052):0.0013,((ENSAMEP00000006557:0.0179,ENSCAFP00000022858:0.0285):0.0029,ENSFCAP000000"
                + "13707:0.0189):0.0129):0.0029,(((((((((((ENSPTRP00000006512:0.0031,ENSP00000294179:0.0042):0.0000,ENSGGOP000000"
                + "01889:0.0000):0.0000,ENSPPYP00000003630:0.0031):0.0000,ENSNLEP00000005123:0.0073):0.0000,ENSMMUP00000006982:0."
                + "0052):0.0042,ENSCJAP00000034608:0.0137):0.0134,ENSMICP00000015836:0.0218):0.0061,(ENSTSYP00000009998:0.0416,EN"
                + "SOGAP00000013703:0.0595):0.0089):0.0000,((((((ENSMUSP00000010254:0.0228,ENSRNOP00000025664:0.0236):0.0472,ENSD"
                + "ORP00000009884:0.0551):0.0100,ENSSTOP00000004021:0.0234):0.0021,ENSCPOP00000007470:0.1205):0.0047,((ENSOCUP000"
                + "00008344:0.0056,ENSOCUP00000015535:0.1226):0.0089,ENSOPRP00000002193:0.0849):0.0109):0.0020,(ENSTBEP0000001220"
                + "3:0.0084,ENSTBEP00000002207:0.0857):0.0335):0.0000):0.0066,ENSCHOP00000002868:0.0487):0.0047,(ENSPCAP000000155"
                + "94:0.0477,ENSLAFP00000019690:0.0515):0.0105):0.0091):0.0214,ENSSARP00000008977:0.0718):0.0437,((ENSSHAP0000000"
                + "7602:0.0305,ENSMODP00000010070:0.0642):0.0198,ENSMEUP00000012120:0.0504):0.0510):0.0000,ENSOANP00000020035:0.6"
                + "127):0.0886,ENSACAP00000015669:0.2838):0.0186,ENSXETP00000042151:0.3370):0.0500,ENSPMAP00000007615:0.2412):0.0"
                + "201,(((((ENSORLP00000002803:0.0915,ENSGACP00000022442:0.1903):0.0257,(ENSTNIP00000019920:0.0360,ENSTRUP0000003"
                + "3173:0.0672):0.0644):0.0708,ENSDARP00000034979:0.1692):0.0628,ENSDARP00000114359:0.3159):0.0356,(ENSPMAP000000"
                + "02462:0.0000,ENSPMAP00000009345:0.1858):0.5735):0.0338):0.2847,FBpp0080389:0.6468):0.2630,(ENSCSAVP00000011571"
                + ":0.1031,ENSCINP00000005346:0.2258):0.5135):0.1809,F55A11.2:0.9124):0.0668,ENSDNOP00000003878:0.0000,YLR026C:1."
                + "5885):0.0000;";
        TreeNode node = new TreeNode(tree);
        assertEquals(3, node.getChildrenCount());
        assertEquals(tree, node.toString());
    }

    public void testParseTree() throws Exception
    {
        String tree = "(((((((((ENSGALP00000022244:0.0166,ENSMGAP00000008380:0.0168):0.0411,ENSTGUP00000009440:0.0829):0.1165,"
                + "ENSACAP00000003615:0.2223):0.0668,(((ENSMODP00000015498:0.0429,ENSSHAP00000010257:0.0432):0.1104,(((((((((ENS"
                + "PTRP00000017182:0.0000,ENSP00000344331:0.0070):0.0023,ENSGGOP00000015671:0.0071):0.0101,ENSPPYP00000010371:0."
                + "0112):0.0000,ENSNLEP00000011283:0.0111):0.0032,ENSMMUP00000020617:0.0267):0.0119,ENSCJAP00000005794:0.0472):0"
                + ".0461,ENSOGAP00000012064:0.0965):0.0128,((((ENSRNOP00000020858:0.0373,ENSMUSP00000057697:0.0436):0.1244,ENSDO"
                + "RP00000000043:0.1458):0.0235,ENSCPOP00000002021:0.1649):0.0270,(ENSOCUP00000003462:0.0589,ENSOPRP00000002554:"
                + "0.1260):0.0904):0.0344):0.0000,((((ENSFCAP00000007669:0.0658,ENSCAFP00000000040:0.0766):0.0335,ENSECAP0000001"
                + "5744:0.0572):0.0082,((ENSMLUP00000018734:0.0697,ENSPVAP00000004690:0.0816):0.0026,(((ENSTTRP00000014494:0.054"
                + "7,ENSBTAP00000000115:0.0875):0.0171,ENSSSCP00000005242:0.1074):0.0431,ENSSARP00000009675:0.3035):0.0237):0.02"
                + "24):0.0326,((ENSLAFP00000003791:0.0911,ENSPCAP00000011241:0.0965):0.0284,ENSETEP00000003555:0.1636):0.1120):0"
                + ".0234):0.1763):0.0019,ENSOANP00000012119:0.2877):0.1242):0.0728,ENSXETP00000050839:0.4036):0.0983,ENSGGOP0000"
                + "0022916:8.4024):0.1238,((((ENSTNIP00000008521:0.0028,ENSTNIP00000016511:0.0548):0.0878,ENSTRUP00000013346:0.0"
                + "778):0.0849,ENSGACP00000002656:0.1151):0.2132,ENSDARP00000105262:0.2346):0.2359):0.9007,((((((ENSGACP00000005"
                + "557:0.0959,ENSORLP00000017231:0.1927):0.0188,(ENSTNIP00000016767:0.0666,ENSTRUP00000001412:0.0791):0.0617):0."
                + "1028,ENSDARP00000081874:0.2335):0.0426,((((ENSTRUP00000012283:0.0499,ENSTNIP00000009766:0.0701):0.0487,ENSGAC"
                + "P00000020674:0.1240):0.0431,ENSORLP00000006415:0.1640):0.2162,ENSDARP00000086003:0.2103):0.0680):0.1023,((((("
                + "ENSMGAP00000008256:0.0133,ENSGALP00000009503:0.0139):0.0450,ENSTGUP00000017712:0.0506):0.0700,ENSACAP00000004"
                + "124:0.1210):0.0333,((((ENSMEUP00000005818:0.0388,ENSSHAP00000006920:0.0398):0.0202,ENSMODP00000014550:0.0997)"
                + ":0.0704,(((((((((ENSBTAP00000002628:0.0210,ENSSSCP00000007356:0.0471):0.0032,ENSTTRP00000012422:0.0149):0.001"
                + "1,ENSEEUP00000002652:0.0513):0.0013,((ENSSARP00000004423:0.0612,ENSVPAP00000011344:0.0639):0.0201,ENSECAP0000"
                + "0018216:0.0218):0.0072):0.0014,(ENSAMEP00000010371:0.0126,ENSCAFP00000029875:0.0210):0.0089):0.0000,(ENSMLUP0"
                + "0000008176:0.0199,ENSPVAP00000014246:0.0251):0.0082):0.0019,(((ENSCPOP00000000622:0.0405,ENSTBEP00000009453:0"
                + ".0493):0.0085,(((ENSMUSP00000031198:0.0193,ENSRNOP00000031951:0.0438):0.0547,ENSDORP00000005310:0.0448):0.009"
                + "6,ENSOCUP00000014274:0.0631):0.0091):0.0005,((ENSMICP00000010754:0.0108,ENSOGAP00000011871:0.0287):0.0021,((("
                + "((ENSP00000359333:0.0000,ENSPTRP00000001660:0.0009):0.0037,ENSPPYP00000001334:0.0140):0.0000,ENSNLEP000000127"
                + "76:0.0028):0.0033,ENSMMUP00000006723:0.0032):0.0036,ENSCJAP00000032586:0.0186):0.0119):0.0040):0.0067):0.0077"
                + ",(ENSDNOP00000004686:0.0222,ENSCHOP00000008947:0.0423):0.0086):0.0020,((ENSLAFP00000000879:0.0149,ENSPCAP0000"
                + "0010991:0.0348):0.0076,ENSETEP00000005649:0.0818):0.0056):0.0977):0.0190,ENSOANP00000007396:0.1097):0.0401):0"
                + ".0941,ENSXETP00000049750:0.2109):0.2592):0.1155,((((((ENSTGUP00000006233:0.0008,ENSTGUP00000006191:0.0013):0."
                + "0724,(ENSGALP00000003836:0.0125,ENSMGAP00000007527:0.0245):0.0762):0.0556,ENSACAP00000007010:0.2276):0.0199,("
                + "(((ENSMODP00000021955:0.0394,ENSMEUP00000004718:0.0520):0.0321,ENSSHAP00000021812:0.0950):0.1063,((((((((ENSM"
                + "USP00000073860:0.0239,ENSRNOP00000006186:0.0330):0.1110,ENSSTOP00000008152:0.0692):0.0153,ENSCPOP00000014466:"
                + "0.0977):0.0084,ENSOPRP00000011501:0.1447):0.0107,((ENSMICP00000014036:0.0216,ENSOGAP00000007667:0.0791):0.004"
                + "1,(((((ENSGGOP00000015674:0.0067,ENSPTRP00000036927:0.0087):0.0009,ENSP00000360757:0.0000):0.0067,ENSPPYP0000"
                + "0022180:0.0159):0.0053,(ENSNLEP00000010181:0.1256,ENSMMUP00000040208:0.1928):0.0785):0.0264,ENSCJAP0000002025"
                + "3:0.0473):0.0328):0.0110):0.0035,ENSTBEP00000014136:0.0904):0.0087,(ENSPCAP00000005674:0.0927,ENSETEP00000006"
                + "830:0.1342):0.0675):0.0075,(((((ENSSSCP00000006247:0.0511,ENSBTAP00000029233:0.0631):0.0160,ENSPVAP0000000693"
                + "9:0.0866):0.0129,ENSECAP00000003977:0.0448):0.0023,ENSEEUP00000008431:0.2282):0.0034,((ENSAMEP00000004199:0.0"
                + "436,ENSCAFP00000028939:0.0634):0.0155,ENSFCAP00000000459:0.0321):0.0136):0.0150):0.2246):0.0208,ENSOANP000000"
                + "09279:0.0994):0.0477):0.0231,ENSXETP00000048300:0.3144):0.0702,(((ENSGACP00000021003:0.0835,ENSORLP0000000455"
                + "0:0.1133):0.0244,(ENSTRUP00000016799:0.0341,ENSTNIP00000016449:0.0660):0.0948):0.0746,ENSDARP00000078196:0.34"
                + "99):0.1379):0.2186):1.3439):0.0000,C53D5.1a:1.5369):0.0000;";
        TreeNode node = new TreeNode(tree);
        assertEquals("Distance of the left child", 1.5369, node.getChild(1).getDistanceToParent(), 0.0001);
        assertEquals("Whole tree", tree, node.toString());
        List<TreeNode> list = new ArrayList<>();
        for( TreeNode subNode : node )
        {
            list.add(subNode);
        }
        assertEquals(259, list.size());
        Map<String, Float> distances = node.getDistances("ENSMUSP00000057697", new String[] {"ENSRNOP00000020858", "ENSRNOP00000031951"});
        assertEquals(0.0809, distances.get("ENSRNOP00000020858"), 0.0001);
        assertEquals(3.8545, distances.get("ENSRNOP00000031951"), 0.0001);
        distances = node.getDistances("ENSBTAP00000002628", new String[] {"ENSMODP00000014550"});
        assertEquals(0.3074, distances.get("ENSMODP00000014550"), 0.0001);
    }
}

/* Generated By:JJTree: Do not edit this line. SimpleNode.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=true,NODE_PREFIX=Glycan,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package biouml.plugins.glycan.parser;

public class SimpleNode implements Node
{
    protected Node parent;
    protected Node[] children;
    protected int id;
    protected Object value;
    protected GlycanParser parser;
    protected Token firstToken;
    protected Token lastToken;
    protected String name = "";

    public String getName()
    {
        return name;
    }

    public void setName(String name)
    {
        this.name = name;
    }

    public SimpleNode(int i)
    {
        id = i;
    }

    public SimpleNode(GlycanParser p, int i)
    {
        this(i);
        parser = p;
    }

    @Override
    public void addAsLast(Node child)
    {
        jjtAddChild(child, jjtGetNumChildren());
        child.jjtSetParent(this);
    }

    @Override
    public void jjtOpen()
    {
    }

    @Override
    public void jjtClose()
    {
    }

    @Override
    public void jjtSetParent(Node n)
    {
        parent = n;
    }
    @Override
    public Node jjtGetParent()
    {
        return parent;
    }

    @Override
    public void jjtAddChild(Node n, int i)
    {
        if( children == null )
        {
            children = new Node[i + 1];
        }
        else if( i >= children.length )
        {
            Node c[] = new Node[i + 1];
            System.arraycopy(children, 0, c, 0, children.length);
            children = c;
        }
        children[i] = n;
    }

    @Override
    public Node jjtGetChild(int i)
    {
        return children[i];
    }

    @Override
    public int jjtGetNumChildren()
    {
        return ( children == null ) ? 0 : children.length;
    }

    public void jjtSetValue(Object value)
    {
        this.value = value;
    }
    public Object jjtGetValue()
    {
        return value;
    }

    public Token jjtGetFirstToken()
    {
        return firstToken;
    }
    public void jjtSetFirstToken(Token token)
    {
        this.firstToken = token;
    }
    public Token jjtGetLastToken()
    {
        return lastToken;
    }
    public void jjtSetLastToken(Token token)
    {
        this.lastToken = token;
    }

    /* You can override these two methods in subclasses of SimpleNode to
       customize the way the node appears when the tree is dumped.  If
       your output uses more than one line you should override
       toString(String), otherwise overriding toString() is probably all
       you need to do. */

    @Override
    public String toString()
    {
        return GlycanParserTreeConstants.jjtNodeName[id];
    }
    public String toString(String prefix)
    {
        return prefix + toString();
    }

    /* Override this method if you want to customize how the node dumps
       out its children. */

    public void dump(String prefix)
    {
        System.out.println(toString(prefix));
        if( children != null )
        {
            for( int i = 0; i < children.length; ++i )
            {
                SimpleNode n = (SimpleNode)children[i];
                if( n != null )
                {
                    n.dump(prefix + " ");
                }
            }
        }
    }
}

/* JavaCC - OriginalChecksum=2f14cb60f54062ccaa86e0583ca55097 (do not edit this line) */

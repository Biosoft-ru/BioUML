package biouml.plugins.modelreduction._test;

import junit.framework.Test;
import junit.framework.TestSuite;
import ru.biosoft.access._test.AbstractBioUMLTest;
import biouml.model.Diagram;
import biouml.plugins.modelreduction.MetabolicControlAnalysis;
import biouml.plugins.modelreduction.MetabolicControlAnalysis.MetabolicControlAnalysisResults;
import biouml.plugins.simulation.java.JavaSimulationEngine;

public class TestMetabolicControlAnalysis extends AbstractBioUMLTest
{
    public TestMetabolicControlAnalysis(String name)
    {
        super(name);
    }

    public static Test suite()
    {
        TestSuite suite = new TestSuite(TestMetabolicControlAnalysis.class);
        return suite;
    }

    /**
     * Results generated by COPASI 4.6.32 for the diagram {@link TestUtils#createTestDiagram_2()}
     */
    private double[][] resultElasticities = new double[][] { {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 2, -1, 0}, {0, 2, 0, -1}, {0, 0, 1, 0},
            {0, 0, 0, 1}};
    private double[][] resultCC = new double[][] { {1, -1, -4.44089e-017, -4.44089e-017, -4.44089e-017, -4.44089e-017},
            {1, -1.77636e-016, -0.25, -0.25, -0.25, -0.25}, {1, -3.55271e-016, 0.25, -0.25, -0.75, -0.25},
            {1, -3.55271e-016, -0.25, 0.25, -0.25, -0.75}};

    private double[][] resultFC = new double[][] { {1, 0, 0, 0, 0, 0},
            {1, 1.11022e-016, -4.44089e-017, -4.44089e-017, -4.44089e-017, -4.44089e-017}, {1, 4.94879e-023, 0.25, -0.25, 0.25, -0.25},
            {1, 4.94879e-023, -0.25, 0.25, -0.25, 0.25}, {1, -3.55271e-016, 0.25, -0.25, 0.25, -0.25},
            {1, -3.55271e-016, -0.25, 0.25, -0.25, 0.25}};

    public void testMetabolicControlAnalysis() throws Exception
    {
        Diagram diagram = TestUtils.createTestDiagram_2();
        
        JavaSimulationEngine engine = new JavaSimulationEngine();
        engine.setOutputDir("../out");
        
        MetabolicControlAnalysis mca = new MetabolicControlAnalysis(null, "");
        mca.getParameters().setRelativeTolerance(1.0E-9);
        mca.getParameters().getEngineWrapper().setDiagram(diagram);
        mca.getParameters().setEngine(engine);
        mca.getParameters().getEngineWrapper().getEngine().setCompletionTime(1E9);

        MetabolicControlAnalysisResults results = mca.performAnalysis();

        double accuracy = 1E-7;
        boolean isElasticitiesOk = TestUtils.compare(resultElasticities, results.getElasticities(), accuracy);
        boolean isCCOk = TestUtils.compare(resultCC, results.getCC(), accuracy);
        boolean isFCOk = TestUtils.compare(resultFC, results.getFC(), accuracy);

        assertEquals(true, isElasticitiesOk && isCCOk && isFCOk);
    }
}

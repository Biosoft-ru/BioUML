package biouml.plugins.pharm.nlme;

/*
 * This code is generated by BioUML FrameWork
 * for model diagram  at 2014.02.07 12:41:00
 */
import biouml.plugins.simulation.java.JavaBaseModel;

public class ODEModel extends JavaBaseModel
{
    public double conc;
    public double ka;
    public double ke;
    public double CL;


    private void calculateParameters() throws Exception
    {
        conc = x_values[0]/Math.exp(CL)*Math.exp(ke);
    }
 

    @Override
    public double[] dy_dt(double time, double[] x_values) throws Exception
    {
        this.time = time;
        this.x_values = x_values;
        final double[] dydt = new double[2];  
        calculateParameters();
        dydt[0] = +Math.exp(ka)*x_values[1] - Math.exp(ke)*x_values[0];
        dydt[1] = -Math.exp(ka)*x_values[1];
        return dydt;
    }


    @Override
    public void init() throws Exception
    {
        conc = 0.0; // initial value of conc
        ka = 0.0; // initial value of ka
        ke = 0.0; // initial value of ke
        CL = 0.0; // initial value of CL
        time = 0.0; // initial value of time
        initialValues = getInitialValues();
        this.isInit = true; 
    }


    @Override
    public double[] getInitialValues() throws Exception
    {
       if (!this.isInit)
       {
            this.x_values = new double[2];
            this.time = 0.0;
            x_values[0] = 0.0; //  initial value of y2
            x_values[1] = 4; //  initial value of y1
        calculateParameters();
            return x_values;
        }
        else return initialValues;
    }  


    @Override
    public double[] extendResult(double time, double[] x_values) throws Exception
    {
        this.time = time;
        this.x_values = x_values;
        calculateParameters();
        double[] y = new double[7];
        y[0] = conc;
        y[1] = ka;
        y[2] = x_values[0];
        y[3] = ke;
        y[4] = x_values[1];
        y[5] = CL;
        y[6] = time;
        return y;
    }


    @Override
    public void setCurrentValues(double[] values) throws Exception
    {
        conc = values[0];
        ka = values[1];
        x_values[0] = values[2];
        ke = values[3];
        x_values[1] = values[4];
        CL = values[5];
        time = values[6];
        calculateParameters();
    }
 }
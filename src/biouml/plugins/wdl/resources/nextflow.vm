#######################################################################################
#####################################CONSTANTS#########################################
#######################################################################################
#set ($BR = "
")
#set ($INDENT = "  ")
#set ($QUOTE = '"')
#######################################################################################
#####################################MACROS############################################
#######################################################################################
#macro(comma $list)
#if($velocityCount < $list.size()),#end
#end
#######################################################################################
#macro(callNF $call)
#if ($helper.isInsideCycle($call))$helper.prepareInputs($call)#end
#set ($inputs = $helper.getInputs($call))
  $helper.getResultName($call) = $helper.getCallName($call)( #foreach($input in $inputs)$helper.getCallInputName($input)#comma($inputs) #end)$BR
#end
#######################################################################################
#macro(scatterNF $scatter)
#foreach( $n in $helper.orderCalls($scatter))
#if ($helper.isCycle($n))#scatterNF($n)
#elseif ($helper.isCall($n))#callNF($n)
#end 
#end
#end
#######################################################################################
#macro(expressionNF $expression)
  $helper.getName($expression) = $helper.getExpression($expression)
#end 
#######################################################################################
#######################################START###########################################
#######################################################################################
nextflow.enable.dsl=2
#######################################################################################
#set($functions = $helper.getFunctions())
#if (!$functions.isEmpty())
include { $functions } from './biouml_function.nf'
#end
#######################################################################################
#foreach ($c in $helper.getImportedCalls())include { $helper.getTaskRef($c) as $helper.getImportedAlias($c) } from './$helper.getImportedDiagram($c)'$BR#end
#######################################################################################
#set ($externalParameters = $helper.getExternalParameters())
#if ($externalParameters.size() > 0)
#foreach( $externalParameter in $externalParameters )
$helper.getExternalInput($externalParameter)
#end
#end
#if($externalParameters.size() > 0)$BR#end
#######################################################################################
#######################################TASKS###########################################
#######################################################################################
#foreach( $task in $helper.getTasks())
process $task.getName() {
#set ($inputs = $helper.getInputs($task))
#if ($inputs.size() > 0)
$BR  input :
#foreach( $input in $inputs )  $helper.getDeclaration($input)$BR#end
$BR#end
#set ($container = $helper.getContainer($task))#if($container)  container '$container'$BR#end
#set ($cpus = $helper.getCPUs($task))#if($cpus)  cpus $cpus$BR#end
#set ($memory = $helper.getMemory($task))#if($memory)  memory $memory$BR#end
#set ($maxRetries = $helper.getMaxRetries($task))#if($maxRetries)  maxRetries $maxRetries$BR#end
$BR  publishDir "$task.getName()", mode: 'copy'
$BR  script:
#foreach($declaration in $helper.getPrivateDecarations($task))
  $helper.writePrivateDeclaration($declaration)
#end
  """
  $helper.getCommand($task).trim()
  """
#set ($outputs = $helper.getOutputs($task))
#if ($outputs.size() > 0)
$BR  output:
#foreach( $output in $outputs )
  $helper.getType($output) $helper.getExpression($output), emit: $helper.getName($output) 
#end
#end
}$BR
#end
#######################################################################################
###################################WORKFLOW############################################
#######################################################################################
workflow mainWorkflow {
#set ($externalParameters = $helper.getExternalParameters())
#if ($externalParameters.size() > 0)
  take:
#foreach( $externalParameter in $externalParameters )
  $helper.getName($externalParameter)
#end
#end
$BR  main:
#foreach( $n in $helper.orderCalls($diagram))
#if ($helper.isCycle($n))#scatterNF($n)
#elseif ($helper.isCall($n))#callNF($n)
#elseif ($helper.isExpression($n))#expressionNF($n)
#end 
#end
#set ($externalOutputs = $helper.getExternalOutputs())
#if ($externalOutputs.size() > 0)
  emit: 
#foreach( $externalOutput in $externalOutputs )
  $helper.getName($externalOutput) = $helper.getCallEmit($externalOutput)
#end
#end
}$BR
################################ENTRY WORKFLOW#########################################
workflow {
$helper.getName()( #foreach($ep in $externalParameters)params.$helper.getName($ep)#comma($externalParameters) #end )
}
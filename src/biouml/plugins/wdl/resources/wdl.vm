
#######################################################################################
#####################################CONSTANTS#########################################
#######################################################################################
#set ($BR = "
")
#set ($INDENT = "  ")
#set ($QUOTE = '"')
#######################################################################################
#####################################MACROS############################################
#######################################################################################
#macro(comma $list)
#if($velocityCount < $list.size()),#end
#end
#######################################################################################
#macro(call $call)
#set ($diagramAlias = $helper.getExternalDiagramAlias($call) ) 
  call #if($diagramAlias)$diagramAlias.#end$helper.getTaskRef($call) #if($helper.getAlias($call)) as $helper.getAlias($call)#end {
#set ($inputs = $helper.getInputs($call))
#if ($inputs.size()> 0)
     input: #foreach($input in $inputs) $helper.getCallInput($input)#comma($inputs)#end
#end
  }$BR
#end
#######################################################################################
#macro(scatter $scatter)
  scatter ( $helper.getCycleVariable($scatter) in $helper.getCycleName($scatter) ) {
#foreach( $n in $helper.orderCalls($scatter))
#if ($helper.isCycle($n))#scatter($n)
#elseif ($helper.isCall($n))#call($n)
#end 
#end
  }$BR
#end
#macro(expression $expression)
  $helper.getType($expression) $helper.getName($expression) = $helper.getExpression($expression)
#end 
#######################################################################################
version $helper.getVersion()$BR
#######################################################################################
#foreach ($import in $helper.getImports())
import "$import.getSourceName()" as $import.getAlias()
#end$BR
#######################################################################################
#######################################TASKS###########################################
#######################################################################################
#foreach( $task in $helper.getTasks())
task $task.getName() {
#set ($inputs = $helper.getInputs($task))
#if ($inputs.size() > 0)
  input {
#foreach( $input in $inputs )
    $helper.getDeclaration($input)
#end
  }$BR
#end
#foreach($declaration in $helper.getBeforeCommand($task))
  $declaration.toString()
#end
  command {
     $helper.getCommand($task).trim()
  }$BR
#set ($outputs = $helper.getOutputs($task))
#if ($outputs.size() > 0)
  output {
#foreach( $output in $outputs )
    $helper.getDeclaration($output)
#end
#set ($runtime = $helper.getRuntime($task))
#if ($runtime.size() > 0)
  runtime {
#foreach($prop in $runtime.entrySet())
    $prop.getKey(): $prop.getValue()
#end
  }$BR
#end
  }
#end
}$BR
#end
#######################################################################################
###################################WORKFLOW############################################
#######################################################################################
workflow $helper.getName() {
#set ($externalParameters = $helper.getExternalParameters())
#if ($externalParameters.size() > 0)
  input {
#foreach( $externalParameter in $externalParameters )
    $helper.getShortDeclaration($externalParameter)
#end
  }$BR
#end
#foreach( $n in $helper.orderCalls($diagram))
#if ($helper.isCycle($n))#scatter($n)
#elseif ($helper.isCall($n))#call($n)
#elseif ($helper.isExpression($n))#expression($n)
#end 
#end
#set ($externalOutputs = $helper.getExternalOutputs())
#if ($externalOutputs.size() > 0)
  output {
#foreach( $externalOutput in $externalOutputs )
    $helper.getDeclaration($externalOutput)
#end
  }
#end
}
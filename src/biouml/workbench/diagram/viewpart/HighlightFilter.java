package biouml.workbench.diagram.viewpart;

import java.awt.Color;
import java.awt.Component;
import ru.biosoft.graphics.Brush;
import biouml.model.AbstractFilter;
import biouml.model.Compartment;
import biouml.model.DiagramElement;
import biouml.model.DiagramFilter;
import biouml.model.EquivalentNodeGroup;
import biouml.model.Node;
import biouml.standard.diagram.Util;
import biouml.standard.filter.HighlightAction;


/**
 * @author Ilya
 *
 */
@SuppressWarnings ( "serial" )
public class HighlightFilter extends AbstractFilter
{
    private Brush brush;
    private HighlightAction action;

    public HighlightFilter(Color color)
    {
        setLoading( true );
        brush = new Brush( color );
        action = new HighlightAction( brush );
    }

    @Override
    public Component getOptionsControl()
    {
        return null;
    }

    /**
     * Hides or highlights diagram elements according to filter settings.
     * Prerequisite: diagram view should be generated by DiagramViewBuilder.
     */
    @Override
    public void apply(Compartment diagram)
    {
        if( !isEnabled() )
            return;

        for( DiagramElement de : diagram )
        {
            if( de instanceof Node )
                processNode( (Node)de );
            if( de instanceof Compartment && ! ( de instanceof EquivalentNodeGroup ) )
                apply( (Compartment)de );
        }
    }

    @Override
    protected void processNode(Node node)
    {
        if( isHighlighted( node ) )
            processOutsideFill( node );
    }

    public static boolean isHighlighted(DiagramElement de)
    {
        return de.getAttributes().hasProperty( Util.HIGHLIGHT_PROPERTY )
                && Boolean.parseBoolean( de.getAttributes().getValueAsString( Util.HIGHLIGHT_PROPERTY ) );
    }

    private void processOutsideFill(Node node)
    {
        action.apply( node );
    }

    @Override
    public String getName()
    {
        return "Highlight Filter";
    }

    @Override
    public DiagramFilter clone()
    {
        return new HighlightFilter( brush.getColor() );
    }
}
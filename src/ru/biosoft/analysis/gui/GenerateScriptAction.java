package ru.biosoft.analysis.gui;

import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.util.Map;
import java.util.Map.Entry;

import javax.swing.AbstractAction;
import javax.swing.JScrollPane;
import javax.swing.JTabbedPane;
import javax.swing.JTextPane;

import com.developmentontheedge.application.Application;
import com.developmentontheedge.application.ApplicationUtils;
import com.developmentontheedge.application.dialog.OkCancelDialog;

import ru.biosoft.access.script.ScriptTypeRegistry;
import ru.biosoft.access.script.ScriptTypeRegistry.ScriptType;
import ru.biosoft.analysis.document.AnalysisDocument;
import ru.biosoft.analysiscore.AnalysisMethod;

public class GenerateScriptAction extends AbstractAction
{
    public static final String KEY = "Generate script";
    public static final String DOCUMENT = "Analysis document";

    public GenerateScriptAction()
    {
        super(KEY);
    }

    @Override
    public void actionPerformed(ActionEvent e)
    {
        AnalysisDocument doc = (AnalysisDocument)getValue(DOCUMENT);
        AnalysisMethod method = doc.createAnalysisMethod();
        Map<String, String> scripts = method.generateScripts(method.getParameters());
        if(scripts.isEmpty())
        {
            ApplicationUtils.errorBox("No scripts can be generated by analysis");
        }
        generateDialog(scripts, method.getName());
    }

    private void generateDialog(Map<String, String> scripts, String methodName)
    {
        OkCancelDialog dialog = new OkCancelDialog(Application.getApplicationFrame(), methodName);
        dialog.setPreferredSize(new Dimension(450, 370));
        dialog.setMinimumSize(new Dimension(250, 150));

        JTabbedPane pane = new JTabbedPane();
        dialog.add(pane);
        Map<String, ScriptType> scriptTypes = ScriptTypeRegistry.getScriptTypes();
        
        for(Entry<String, String> entry: scripts.entrySet())
        {
            JTextPane textPane = new JTextPane();
            textPane.setEditable(false);
            textPane.setText(entry.getValue());
    
            JScrollPane textScrollPane = new JScrollPane(textPane);
            textScrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
            pane.add(scriptTypes.get(entry.getKey()).getTitle(), textScrollPane);
        }
        if( !dialog.doModal() )
            return;
    }
}

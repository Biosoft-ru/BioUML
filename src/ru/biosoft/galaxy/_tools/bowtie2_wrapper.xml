<tool id="bowtie2_orig" name="Bowtie2" version="0.1">
    <!-- Wrapper compatible with Bowtie version 2.0.0 -->
    <description>is a short-read aligner</description>
    <version_command>bowtie2 --version</version_command>
    <requirements>
        <requirement type="package">bowtie2</requirement>
        <requirement type="package">samtools</requirement>
    </requirements>
    <command interpreter="python">
        bowtie2_wrapper.py
        
        ## Change this to accommodate the number of threads you have available.
        --num-threads="4"

        ## Outputs.
        --output=$output

        #if str( $singlePaired.sPaired ) == "single"
            #if $unalignedFile
                --output_unaligned_reads=$output_unaligned_reads_l
            #end if
        #else
            #if $unalignedFile
                --output_unaligned_reads_l=$output_unaligned_reads_l
                --output_unaligned_reads_r=$output_unaligned_reads_r
            #end if
        #end if
        
        ## Handle reference file.
        #if $refGenomeSource.genomeSource == "history":
            --own-file=$refGenomeSource.ownFile
        #else:
            --indexes-path="${refGenomeSource.index.fields.path}"
        #end if

        ## Are reads single-end or paired?
        --single-paired=$singlePaired.sPaired

        ## First input file always required.
        --input1=$input1
        
        ## Second input only if input is paired-end.
        #if $singlePaired.sPaired == "paired"
            --input2=$singlePaired.input2
            -I $singlePaired.minInsert
            -X $singlePaired.maxInsert
        #end if

        ## Set params.
        --settings=$params.settingsType
        
        #if $params.settingsType == "full":
            #if str($params.align_type) == "end_to_end":
                --end-to-end
                #if str($params.preset.b2_preset) == "Yes":
                   --preset-alignment=$params.preset.align_preset_select
                #end if
            #else:
                --local
                #if str($params.preset.b2_preset) == "Yes":
                   --preset-alignment=$params.preset.align_preset_select-local
                #end if
            #end if
            #if str($params.preset.b2_preset) == "No":
               --seed_mismatches $params.preset.seed_mismatches
               --seed_length $params.preset.seed_length
               --seed_interval_function $params.preset.seed_interval_function
               --seed_extension_attempts $params.preset.seed_extension_attempts
               --reseed_attempts $params.preset.reseed_attempts
            #end if
            $params.pReverseAlign
            $params.pReport
        #end if

        ## Read group information.
        #if $readGroup.specReadGroup == "yes"
          --rgid="$readGroup.rgid"
          --rglb="$readGroup.rglb"
          --rgpl="$readGroup.rgpl"
          --rgsm="$readGroup.rgsm"
        #end if
    </command>
    <inputs>
        <conditional name="singlePaired">
            <param name="sPaired" type="select" label="Is this library mate-paired?">
              <option value="single">Single-end</option>
              <option value="paired">Paired-end</option>
            </param>
            <when value="single">
                <param format="fastqsanger" name="input1" type="data" label="FASTQ file" help="Nucleotide-space: Must have Sanger-scaled quality values with ASCII offset 33"/>
            </when>
            <when value="paired">
                <param format="fastqsanger" name="input1" type="data" label="FASTQ file" help="Nucleotide-space: Must have Sanger-scaled quality values with ASCII offset 33" />
                <param format="fastqsanger" name="input2" type="data" label="FASTQ file" help="Nucleotide-space: Must have Sanger-scaled quality values with ASCII offset 33" />
                <!-- TODO: paired-end specific parameters. -->
                <param name="minInsert" type="integer" value="0" label="Minimum insert size for valid paired-end alignments" />
                <param name="maxInsert" type="integer" value="250" label="Maximum insert size for valid paired-end alignments" />
            </when>
        </conditional>
        <param name="unalignedFile" type="boolean" truevalue="true" falsevalue="false" checked="False" label="Write all reads that could not be aligned to a file (uses --un for single-end and  --un-conc for paired-ends)" />
        <conditional name="refGenomeSource">
          <param name="genomeSource" type="select" label="Will you select a reference genome from your history or use a built-in index?" help="Built-ins were indexed using default options">
            <option value="indexed">Use a built-in index</option>
            <option value="history">Use one from the history</option>
          </param>
          <when value="indexed">
            <param name="index" type="select" label="Select a reference genome" help="If your genome of interest is not listed, contact the Galaxy team">
              <options from_data_table="bowtie2_indexes">
                <filter type="sort_by" column="2"/>
                <validator type="no_options" message="No indexes are available for the selected input dataset"/>
              </options>
            </param>
          </when>
          <when value="history">
            <param name="ownFile" type="data" format="fasta" metadata_name="dbkey" label="Select the reference genome" />
          </when>  <!-- history -->
        </conditional>  <!-- refGenomeSource -->
        <conditional name="params">
            <param name="settingsType" type="select" label="Parameter Settings" help="You can use the default settings or set custom values for any of Bowtie's parameters.">
              <option value="preSet">Use Defaults</option>
              <option value="full">Full parameter list</option>
            </param>
            <when value="preSet" />
            <!-- Full/advanced params. -->
            <when value="full">
                <param name="align_type" type="select" label="Type of alignment">
                    <option selected="true" value="end_to_end">End to end</option>
                    <option value="local">Local</option>
                </param>
                
                <param name="pReverseAlign" type="select" label="Choose whether or not to align against the reverse-complement reference strand (--norc)">
                  <option value="">Align against the reverse-complement reference strand</option>
                  <option value="--norc">Do not align against the reverse-complement reference strand</option>
                </param>

                <param name="pReport" type="select" label="Reporting options">
                  <option value="">Single best</option>
                  <option value="--report_all">All</option>
                </param>

                <conditional name="preset">
                    <param name="b2_preset" type="select" label="Use Preset options">
                          <option selected="true" value="Yes">Yes</option>
                          <option value="No">No</option>
                    </param>
                    <when value="Yes">
                        <param name="align_preset_select" type="select" label="Preset option">
                            <option value="very-fast">Very fast</option>
                            <option value="fast">Fast</option>
                            <option selected="true" value="sensitive">Sensitive</option>
                            <option value="very-sensitive">Very sensitive</option>
                        </param>
                    </when>
                    <when value="No" >
                       <param name="seed_mismatches" type="integer" value="0" label="Maximal number of seed mismatches (-N)" />
                       <param name="seed_length" type="integer" value="20" label="Seed length (-L)" />
                       <param name="seed_interval_function" type="text" value="S,1,1.15" label="Seed interval function (-i)" />
                       <param name="seed_extension_attempts" type="integer" value="15" label="Seed extension attempts (-D)" />
                       <param name="reseed_attempts" type="integer" value="2" label="Reseed attempts (-R)" />
                    </when>
                </conditional>
            </when>  <!-- full -->
      </conditional>  <!-- params -->
      <conditional name="readGroup">
            <param name="specReadGroup" type="select" label="Specify the read group for this file?">
                <option value="yes">Yes</option>
                <option value="no" selected="True">No</option>
            </param>
            <when value="yes">
                <param name="rgid" type="text" size="25" label="Read group identiﬁer (ID). Each @RG line must have a unique ID. The value of ID is used in the RG tags of alignment records. Must be unique among all read groups in header section." help="Required if RG specified. Read group IDs may be modiﬁed when merging SAM ﬁles in order to handle collisions." />
                <param name="rglb" type="text" size="25" label="Library name (LB)" help="Required if RG specified" />
                <param name="rgpl" type="text" size="25" label="Platform/technology used to produce the reads (PL)" help="Required if RG specified. Valid values : CAPILLARY, LS454, ILLUMINA, SOLID, HELICOS, IONTORRENT and PACBIO" />
                <param name="rgsm" type="text" size="25" label="Sample (SM)" help="Required if RG specified. Use pool name where a pool is being sequenced" />
            </when>
            <when value="no" />
        </conditional> <!-- readGroup -->
    </inputs>

    <outputs>
        <data format="fastqsanger" name="output_unaligned_reads_l" label="${tool.name} on ${on_string}: unaligned reads (L)" >
            <filter>unalignedFile is True</filter>
            <actions>
                <action type="format">
                    <option type="from_param" name="singlePaired.input1" param_attribute="ext" />
                </action>
            </actions>
        </data>
        <data format="fastqsanger" name="output_unaligned_reads_r" label="${tool.name} on ${on_string}: unaligned reads (R)">
            <filter>singlePaired['sPaired'] == "paired" and unalignedFile is True</filter>
            <actions>
                <action type="format">
                    <option type="from_param" name="singlePaired.input1" param_attribute="ext" />
                </action>
            </actions>
        </data>
        <data format="bam" name="output" label="${tool.name} on ${on_string}: aligned reads">
          <actions>
            <conditional name="refGenomeSource.genomeSource">
              <when value="indexed">
                <action type="metadata" name="dbkey">
                  <option type="from_data_table" name="bowtie2_indexes" column="1" offset="0">
                    <filter type="param_value" column="0" value="#" compare="startswith" keep="False"/>
                    <filter type="param_value" ref="refGenomeSource.index" column="0"/>
                  </option>
                </action>
              </when>
              <when value="history">
                <action type="metadata" name="dbkey">
                  <option type="from_param" name="refGenomeSource.ownFile" param_attribute="dbkey" />
                </action>
              </when>
            </conditional>
          </actions>
        </data>
    </outputs>

    <tests>
    </tests>

    <help>
    </help>
</tool>

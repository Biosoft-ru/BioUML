<tool id="dindel_vcf2cand" name="VCF2Dindel candidate" version="1.0beta">
<command>/bin/bash -v "$script"</command>
 <inputs>
	<param name="vcffile" type="data" format="vcf" label="VCF file">
	</param>

	<param name="min_map_qual" type="integer" value="1" label="minimum mapping quality[1]" help="minimum mapping quality[1]"/>
	<param name="refGenome" type="select" label="Reference genome">
                        <options from_data_table="gatk_picard_indexes">
                                <filter type="sort_by" column="2" />
                                <validator type="no_options" message="No genomes are available for GATK" />
                        </options>
        </param>
</inputs>
        <outputs>
                <data format="txt" name="log" label="Log file"/>
                <data format="txt" name="inserts" label="candidate_indels" help="output file with Dindel-style variants calls"/>
        </outputs>
<configfiles>
    <configfile name="script">#!/bin/bash -v
export PATH=\$PATH:/opt/tools/dindel/default/python
DEST=`dirname $log`
cd \$DEST
err=err.pipe
out=out.pipe
echo \$err

mkfifo "\$err" "\$out"

trap 'cat err.tmp out.tmp &gt;&gt; "$log" ; rm -f "\$err" "\$out" ' EXIT
tee err.tmp &lt; "\$err" &gt;&amp;2 &amp;
tee out.tmp &lt; "\$out" &gt;&amp;1 &amp;

convertVCFToDindel.py --inputFile $vcffile --refFile "${ refGenome.fields.path }" \
   --minQual $min_map_qual --outputFile $inserts  &gt;\$out 2&gt;\$err

## echo files are here \$DEST
## sleep 1000000000000000

STATUS=\$?
if [[ "\$STATUS" != "0" ]] ; then 
   echo "Dindel finished with error" 
   exit \$STATUS
fi

  </configfile>
  </configfiles>

        <help>
        </help>
</tool>



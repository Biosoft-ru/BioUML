/* Generated By:JJTree: Do not edit this line. AstStart.java */
package ru.biosoft.math.model;

import java.util.List;

public class AstStart extends SimpleNode
{
    public AstStart(int id)
    {
        super(id);
    }

    @Override
    public String toString()
    {
        StringBuffer buf = new StringBuffer("Start, status=" + status + "\r\n");

        // print errors and warnings
        if( status > Parser.STATUS_OK && messages != null )
        {
            for( int i = 0; i < messages.size(); i++ )
                buf.append("  " + messages.get(i) + "\r\n");
        }

        return buf.toString();
    }

    /**
     * Status of AST tree. It can be:
     * <ul>
     * <li>{@link Parser.STATUS_OK}</li>
     * <li>{@link Parser.STATUS_WARNING}</li>
     * <li>{@link Parser.STATUS_ERROR}</li>
     * <li>{@link Parser.STATUS_FATAL}</li>
     * </ul>
     *
     * @see Parser
     */
    protected int status;
    public int getStatus()
    {
        return status;
    }
    public void setStatus(int status)
    {
        this.status = status;
    }

    /**
     * List of messages (warnings and errors) generated by parser
     * for corresponding math expression.
     */
    protected List messages;
    public List getMessages()
    {
        return messages;
    }
    public void setMessages(List messages)
    {
        this.messages = messages;
    }

    @Override
    public AstStart cloneAST()
    {
        AstStart start = new AstStart(id);
        start.messages = messages;
        start.status = status;
        return start;
    }

   
    @Override
    public boolean equals(Object obj)
    {
        if( this == obj )
            return true;
        if( obj == null )
            return false;
        if( getClass() != obj.getClass() )
            return false;
        final AstStart other = (AstStart)obj;
        if( messages == null )
        {
            if( other.messages != null )
                return false;
        }
        else if( !messages.equals(other.messages) )
            return false;
        if( status != other.status )
            return false;
        if (this.jjtGetNumChildren() != other.jjtGetNumChildren())
            return false;
        return true;
    }
}
